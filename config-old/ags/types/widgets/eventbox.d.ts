/// <reference types="@girs/dbusmenugtk3-0.4/node_modules/@girs/gtk-3.0/gtk-3.0-ambient.js" />
/// <reference types="@girs/gtk-3.0/gtk-3.0-ambient.js" />
/// <reference types="@girs/cairo-1.0/node_modules/@girs/gobject-2.0/gobject-2.0-ambient.js" />
/// <reference types="@girs/gobject-2.0/gobject-2.0-ambient.js" />
/// <reference types="@girs/gdk-3.0/gdk-3.0-ambient.js" />
/// <reference types="@girs/gtk-3.0/node_modules/@girs/gdk-3.0/gdk-3.0-ambient.js" />
import { type BaseProps } from './widget.js';
import GObject from 'node_modules/@girs/gobject-2.0/gobject-2.0';
import Gtk from 'node_modules/@girs/gtk-3.0/gtk-3.0';
import Gdk from 'node_modules/@girs/gdk-2.0/gdk-2.0?version=3.0';
import Service from '../service.js';
type EventHandler = (self: AgsEventBox, event: Gdk.Event) => boolean | unknown;
export interface EventBoxProps extends BaseProps<AgsEventBox>, Gtk.EventBox.ConstructorProperties {
    on_hover?: EventHandler;
    on_hover_lost?: EventHandler;
    on_scroll_up?: EventHandler;
    on_scroll_down?: EventHandler;
    on_primary_click?: EventHandler;
    on_middle_click?: EventHandler;
    on_secondary_click?: EventHandler;
    on_primary_click_release?: EventHandler;
    on_middle_click_release?: EventHandler;
    on_secondary_click_release?: EventHandler;
}
declare const AgsEventBox_base: {
    new (...args: any[]): {
        _init(config?: Gtk.Widget.ConstructorProperties | undefined): void;
        hovered: boolean;
        _destroyed: boolean;
        _get<T>(field: string): T;
        _set<T_1>(field: string, value: T_1): void;
        connections: import("./widget.js").Connection<any>[];
        binds: import("./widget.js").Bind[];
        properties: import("./widget.js").Property[];
        setup: (self: any) => void;
        connectTo<GObject extends GObject.Object>(o: Service | GObject, callback: (self: any, ...args: unknown[]) => void, event?: string | undefined): any;
        bind<GObject_1 extends GObject.Object>(prop: "notify" | "event" | "destroy" | "can-activate-accel" | "child-notify" | "connect" | "visible" | "map" | "css" | "hpack" | "vpack" | "cursor" | "connections" | "properties" | "binds" | "setup" | "class-name" | "class-names" | "drag-begin" | "draw" | "grab-focus" | "hide" | "keynav-failed" | "mnemonic-activate" | "realize" | "show" | "size-allocate" | "unmap" | "unrealize" | "getv" | "ref" | "unref" | "emit" | "disconnect" | "hovered" | "connectTo" | "bind" | "toggleClassName" | "setCss" | "child" | "events" | "expand" | "halign" | "hexpand" | "margin" | "name" | "opacity" | "parent" | "sensitive" | "style" | "valign" | "vexpand" | "window" | "activate" | "destroyed" | "intersect" | "path" | "reparent" | "unparent" | "g-type-instance" | "bind-property" | "bind-property-full" | "force-floating" | "freeze-notify" | "get-data" | "get-property" | "get-qdata" | "is-floating" | "notify-by-pspec" | "ref-sink" | "run-dispose" | "set-data" | "set-property" | "steal-data" | "steal-qdata" | "thaw-notify" | "watch-closure" | "vfunc-constructed" | "vfunc-dispatch-properties-changed" | "vfunc-dispose" | "vfunc-finalize" | "vfunc-get-property" | "vfunc-notify" | "vfunc-set-property" | "connect-after" | "-init" | "-destroyed" | "-get" | "-set" | "-cssProvider" | "-updateCursor" | "app-paintable" | "can-default" | "can-focus" | "composite-child" | "double-buffered" | "focus-on-click" | "has-default" | "has-focus" | "has-tooltip" | "height-request" | "hexpand-set" | "is-focus" | "margin-bottom" | "margin-end" | "margin-left" | "margin-right" | "margin-start" | "margin-top" | "show-all" | "no-show-all" | "receives-default" | "scale-factor" | "tooltip-markup" | "tooltip-text" | "vexpand-set" | "width-request" | "parent-instance" | "add-accelerator" | "add-device-events" | "add-events" | "add-mnemonic-label" | "add-tick-callback" | "child-focus" | "class-path" | "compute-expand" | "create-pango-context" | "create-pango-layout" | "device-is-shadowed" | "drag-begin-with-coordinates" | "drag-check-threshold" | "drag-dest-add-image-targets" | "drag-dest-add-text-targets" | "drag-dest-add-uri-targets" | "drag-dest-find-target" | "drag-dest-get-target-list" | "drag-dest-get-track-motion" | "drag-dest-set" | "drag-dest-set-proxy" | "drag-dest-set-target-list" | "drag-dest-set-track-motion" | "drag-dest-unset" | "drag-get-data" | "drag-highlight" | "drag-source-add-image-targets" | "drag-source-add-text-targets" | "drag-source-add-uri-targets" | "drag-source-get-target-list" | "drag-source-set" | "drag-source-set-icon-gicon" | "drag-source-set-icon-name" | "drag-source-set-icon-pixbuf" | "drag-source-set-icon-stock" | "drag-source-set-target-list" | "drag-source-unset" | "drag-unhighlight" | "ensure-style" | "error-bell" | "freeze-child-notify" | "get-accessible" | "get-action-group" | "get-allocated-baseline" | "get-allocated-height" | "get-allocated-size" | "get-allocated-width" | "get-allocation" | "get-ancestor" | "get-app-paintable" | "get-can-default" | "get-can-focus" | "get-child-requisition" | "get-child-visible" | "get-clip" | "get-clipboard" | "get-composite-name" | "get-device-enabled" | "get-device-events" | "get-direction" | "get-display" | "get-double-buffered" | "get-events" | "get-focus-on-click" | "get-font-map" | "get-font-options" | "get-frame-clock" | "get-halign" | "get-has-tooltip" | "get-has-window" | "get-hexpand" | "get-hexpand-set" | "get-mapped" | "get-margin-bottom" | "get-margin-end" | "get-margin-left" | "get-margin-right" | "get-margin-start" | "get-margin-top" | "get-modifier-mask" | "get-modifier-style" | "get-name" | "get-no-show-all" | "get-opacity" | "get-pango-context" | "get-parent" | "get-parent-window" | "get-path" | "get-pointer" | "get-preferred-height" | "get-preferred-height-and-baseline-for-width" | "get-preferred-height-for-width" | "get-preferred-size" | "get-preferred-width" | "get-preferred-width-for-height" | "get-realized" | "get-receives-default" | "get-request-mode" | "get-requisition" | "get-root-window" | "get-scale-factor" | "get-screen" | "get-sensitive" | "get-settings" | "size-request" | "get-size-request" | "get-state" | "get-state-flags" | "get-style" | "get-style-context" | "get-support-multidevice" | "get-template-child" | "get-tooltip-markup" | "get-tooltip-text" | "get-tooltip-window" | "get-toplevel" | "get-valign" | "get-valign-with-baseline" | "get-vexpand" | "get-vexpand-set" | "get-visible" | "get-visual" | "get-window" | "grab-add" | "grab-default" | "grab-remove" | "has-grab" | "has-rc-style" | "has-screen" | "has-visible-focus" | "hide-on-delete" | "in-destruction" | "init-template" | "shape-combine-region" | "input-shape-combine-region" | "insert-action-group" | "is-ancestor" | "is-composited" | "is-drawable" | "is-sensitive" | "is-toplevel" | "is-visible" | "list-accel-closures" | "list-action-prefixes" | "list-mnemonic-labels" | "modify-base" | "modify-bg" | "modify-cursor" | "modify-fg" | "modify-font" | "modify-style" | "modify-text" | "override-background-color" | "override-color" | "override-cursor" | "override-font" | "override-symbolic-color" | "queue-allocate" | "queue-compute-expand" | "queue-draw" | "queue-draw-area" | "queue-draw-region" | "queue-resize" | "queue-resize-no-redraw" | "region-intersect" | "register-window" | "remove-accelerator" | "remove-mnemonic-label" | "remove-tick-callback" | "render-icon" | "render-icon-pixbuf" | "reset-rc-styles" | "reset-style" | "send-expose" | "send-focus-change" | "set-accel-path" | "set-allocation" | "set-app-paintable" | "set-can-default" | "set-can-focus" | "set-child-visible" | "set-clip" | "set-composite-name" | "set-device-enabled" | "set-device-events" | "set-direction" | "set-double-buffered" | "set-events" | "set-focus-on-click" | "set-font-map" | "set-font-options" | "set-halign" | "set-has-tooltip" | "set-has-window" | "set-hexpand" | "set-hexpand-set" | "set-mapped" | "set-margin-bottom" | "set-margin-end" | "set-margin-left" | "set-margin-right" | "set-margin-start" | "set-margin-top" | "set-name" | "set-no-show-all" | "set-opacity" | "set-parent" | "set-parent-window" | "set-realized" | "set-receives-default" | "set-redraw-on-allocate" | "set-sensitive" | "set-size-request" | "set-state" | "set-state-flags" | "set-style" | "set-support-multidevice" | "set-tooltip-markup" | "set-tooltip-text" | "set-tooltip-window" | "set-valign" | "set-vexpand" | "set-vexpand-set" | "set-visible" | "set-visual" | "set-window" | "show-now" | "size-allocate-with-baseline" | "style-attach" | "style-get-property" | "thaw-child-notify" | "translate-coordinates" | "trigger-tooltip-query" | "unregister-window" | "unset-state-flags" | "vfunc-adjust-baseline-allocation" | "vfunc-adjust-baseline-request" | "vfunc-adjust-size-allocation" | "vfunc-adjust-size-request" | "vfunc-button-press-event" | "vfunc-button-release-event" | "vfunc-can-activate-accel" | "vfunc-child-notify" | "vfunc-composited-changed" | "vfunc-compute-expand" | "vfunc-configure-event" | "vfunc-damage-event" | "vfunc-delete-event" | "vfunc-destroy" | "vfunc-destroy-event" | "vfunc-direction-changed" | "vfunc-dispatch-child-properties-changed" | "vfunc-drag-begin" | "vfunc-drag-data-delete" | "vfunc-drag-data-get" | "vfunc-drag-data-received" | "vfunc-drag-drop" | "vfunc-drag-end" | "vfunc-drag-failed" | "vfunc-drag-leave" | "vfunc-drag-motion" | "vfunc-draw" | "vfunc-enter-notify-event" | "vfunc-event" | "vfunc-focus" | "vfunc-focus-in-event" | "vfunc-focus-out-event" | "vfunc-get-accessible" | "vfunc-get-preferred-height" | "vfunc-get-preferred-height-and-baseline-for-width" | "vfunc-get-preferred-height-for-width" | "vfunc-get-preferred-width" | "vfunc-get-preferred-width-for-height" | "vfunc-get-request-mode" | "vfunc-grab-broken-event" | "vfunc-grab-focus" | "vfunc-grab-notify" | "vfunc-hide" | "vfunc-hierarchy-changed" | "vfunc-key-press-event" | "vfunc-key-release-event" | "vfunc-keynav-failed" | "vfunc-leave-notify-event" | "vfunc-map" | "vfunc-map-event" | "vfunc-mnemonic-activate" | "vfunc-motion-notify-event" | "vfunc-move-focus" | "vfunc-parent-set" | "vfunc-popup-menu" | "vfunc-property-notify-event" | "vfunc-proximity-in-event" | "vfunc-proximity-out-event" | "vfunc-query-tooltip" | "vfunc-queue-draw-region" | "vfunc-realize" | "vfunc-screen-changed" | "vfunc-scroll-event" | "vfunc-selection-clear-event" | "vfunc-selection-get" | "vfunc-selection-notify-event" | "vfunc-selection-received" | "vfunc-selection-request-event" | "vfunc-show" | "vfunc-show-all" | "vfunc-show-help" | "vfunc-size-allocate" | "vfunc-state-changed" | "vfunc-state-flags-changed" | "vfunc-style-set" | "vfunc-style-updated" | "vfunc-touch-event" | "vfunc-unmap" | "vfunc-unmap-event" | "vfunc-unrealize" | "vfunc-visibility-notify-event" | "vfunc-window-state-event" | "add-child" | "construct-child" | "custom-finished" | "custom-tag-end" | "custom-tag-start" | "get-internal-child" | "parser-finished" | "set-buildable-property" | "vfunc-add-child" | "vfunc-construct-child" | "vfunc-custom-finished" | "vfunc-custom-tag-end" | "vfunc-custom-tag-start" | "vfunc-get-internal-child" | "vfunc-get-name" | "vfunc-parser-finished" | "vfunc-set-buildable-property" | "vfunc-set-name", target: GObject_1, targetProp: keyof GObject_1 extends infer T_2 ? T_2 extends keyof GObject_1 ? T_2 extends string ? T_2 : never : never : never, transform?: (value: GObject_1[keyof GObject_1 extends infer T_3 ? T_3 extends keyof GObject_1 ? T_3 extends string ? T_3 : never : never : never]) => unknown): void | any;
        hpack: "fill" | "start" | "end" | "center" | "baseline";
        vpack: "fill" | "start" | "end" | "center" | "baseline";
        toggleClassName(className: string, condition?: boolean): void;
        class_name: string;
        class_names: string[];
        _cssProvider: Gtk.CssProvider;
        setCss(css: string): void;
        css: string;
        get child(): Gtk.Widget | null;
        set child(child: Gtk.Widget);
        _updateCursor(): void;
        cursor: import("./widget.js").Cursor;
        app_paintable: boolean;
        can_default: boolean;
        can_focus: boolean;
        readonly composite_child: boolean;
        double_buffered: boolean;
        events: Gdk.EventMask;
        expand: boolean;
        focus_on_click: boolean;
        halign: Gtk.Align;
        has_default: boolean;
        has_focus: boolean;
        has_tooltip: boolean;
        height_request: number;
        hexpand: boolean;
        hexpand_set: boolean;
        is_focus: boolean;
        margin: number;
        margin_bottom: number;
        margin_end: number;
        margin_left: number;
        margin_right: number;
        margin_start: number;
        margin_top: number;
        name: string | null;
        no_show_all: boolean;
        opacity: number;
        parent: Gtk.Container;
        receives_default: boolean;
        readonly scale_factor: number;
        sensitive: boolean;
        style: Gtk.Style;
        tooltip_markup: string | null;
        tooltip_text: string | null;
        valign: Gtk.Align;
        vexpand: boolean;
        vexpand_set: boolean;
        visible: boolean;
        width_request: number;
        readonly window: Gdk.Window;
        parent_instance: import("@girs/gobject-2.0").GObject.InitiallyUnowned;
        activate(): boolean;
        add_accelerator(accel_signal: string | null, accel_group: Gtk.AccelGroup, accel_key: number, accel_mods: Gdk.ModifierType, accel_flags: Gtk.AccelFlags): void;
        add_device_events(device: Gdk.Device, events: Gdk.EventMask): void;
        add_events(events: number): void;
        add_mnemonic_label(label: Gtk.Widget): void;
        add_tick_callback(callback: Gtk.TickCallback): number;
        can_activate_accel(signal_id: number): boolean;
        child_focus(direction: Gtk.DirectionType): boolean;
        child_notify(child_property: string | null): void;
        class_path(): [number, string | null, string | null];
        compute_expand(orientation: Gtk.Orientation): boolean;
        create_pango_context(): import("@girs/pango-1.0").Pango.Context;
        create_pango_layout(text: string | null): import("@girs/pango-1.0").Pango.Layout;
        destroy(): void;
        destroyed(widget_pointer: Gtk.Widget): Gtk.Widget;
        device_is_shadowed(device: Gdk.Device): boolean;
        drag_begin(targets: Gtk.TargetList, actions: Gdk.DragAction, button: number, event: Gdk.Event | null): Gdk.DragContext;
        drag_begin_with_coordinates(targets: Gtk.TargetList, actions: Gdk.DragAction, button: number, event: Gdk.Event | null, x: number, y: number): Gdk.DragContext;
        drag_check_threshold(start_x: number, start_y: number, current_x: number, current_y: number): boolean;
        drag_dest_add_image_targets(): void;
        drag_dest_add_text_targets(): void;
        drag_dest_add_uri_targets(): void;
        drag_dest_find_target(context: Gdk.DragContext, target_list: Gtk.TargetList | null): Gdk.Atom;
        drag_dest_get_target_list(): Gtk.TargetList | null;
        drag_dest_get_track_motion(): boolean;
        drag_dest_set(flags: Gtk.DestDefaults, targets: Gtk.TargetEntry[] | null, actions: Gdk.DragAction): void;
        drag_dest_set_proxy(proxy_window: Gdk.Window, protocol: Gdk.DragProtocol, use_coordinates: boolean): void;
        drag_dest_set_target_list(target_list: Gtk.TargetList | null): void;
        drag_dest_set_track_motion(track_motion: boolean): void;
        drag_dest_unset(): void;
        drag_get_data(context: Gdk.DragContext, target: Gdk.Atom, time_: number): void;
        drag_highlight(): void;
        drag_source_add_image_targets(): void;
        drag_source_add_text_targets(): void;
        drag_source_add_uri_targets(): void;
        drag_source_get_target_list(): Gtk.TargetList | null;
        drag_source_set(start_button_mask: Gdk.ModifierType, targets: Gtk.TargetEntry[] | null, actions: Gdk.DragAction): void;
        drag_source_set_icon_gicon(icon: import("@girs/gio-2.0").Gio.Icon): void;
        drag_source_set_icon_name(icon_name: string | null): void;
        drag_source_set_icon_pixbuf(pixbuf: import("@girs/gdkpixbuf-2.0").GdkPixbuf.Pixbuf): void;
        drag_source_set_icon_stock(stock_id: string | null): void;
        drag_source_set_target_list(target_list: Gtk.TargetList | null): void;
        drag_source_unset(): void;
        drag_unhighlight(): void;
        draw(cr: import("@girs/cairo-1.0").cairo.Context): void;
        ensure_style(): void;
        error_bell(): void;
        event(event: Gdk.Event): boolean;
        freeze_child_notify(): void;
        get_accessible(): import("@girs/atk-1.0").Atk.Object;
        get_action_group(prefix: string | null): import("@girs/gio-2.0").Gio.ActionGroup | null;
        get_allocated_baseline(): number;
        get_allocated_height(): number;
        get_allocated_size(): [Gdk.Rectangle, number];
        get_allocated_width(): number;
        get_allocation(): Gdk.Rectangle;
        get_ancestor(widget_type: import("@girs/gobject-2.0").GObject.GType<unknown>): Gtk.Widget | null;
        get_app_paintable(): boolean;
        get_can_default(): boolean;
        get_can_focus(): boolean;
        get_child_requisition(): Gtk.Requisition;
        get_child_visible(): boolean;
        get_clip(): Gdk.Rectangle;
        get_clipboard(selection: Gdk.Atom): Gtk.Clipboard;
        get_composite_name(): string | null;
        get_device_enabled(device: Gdk.Device): boolean;
        get_device_events(device: Gdk.Device): Gdk.EventMask;
        get_direction(): Gtk.TextDirection;
        get_display(): Gdk.Display;
        get_double_buffered(): boolean;
        get_events(): number;
        get_focus_on_click(): boolean;
        get_font_map(): import("@girs/pango-1.0").Pango.FontMap | null;
        get_font_options(): import("@girs/cairo-1.0").cairo.FontOptions | null;
        get_frame_clock(): Gdk.FrameClock | null;
        get_halign(): Gtk.Align;
        get_has_tooltip(): boolean;
        get_has_window(): boolean;
        get_hexpand(): boolean;
        get_hexpand_set(): boolean;
        get_mapped(): boolean;
        get_margin_bottom(): number;
        get_margin_end(): number;
        get_margin_left(): number;
        get_margin_right(): number;
        get_margin_start(): number;
        get_margin_top(): number;
        get_modifier_mask(intent: Gdk.ModifierIntent): Gdk.ModifierType;
        get_modifier_style(): Gtk.RcStyle;
        get_name(): string | null;
        get_no_show_all(): boolean;
        get_opacity(): number;
        get_pango_context(): import("@girs/pango-1.0").Pango.Context;
        get_parent(): Gtk.Widget | null;
        get_parent_window(): Gdk.Window | null;
        get_path(): Gtk.WidgetPath;
        get_pointer(): [number, number];
        get_preferred_height(): [number, number];
        get_preferred_height_and_baseline_for_width(width: number): [number, number, number, number];
        get_preferred_height_for_width(width: number): [number, number];
        get_preferred_size(): [Gtk.Requisition, Gtk.Requisition];
        get_preferred_width(): [number, number];
        get_preferred_width_for_height(height: number): [number, number];
        get_realized(): boolean;
        get_receives_default(): boolean;
        get_request_mode(): Gtk.SizeRequestMode;
        get_requisition(): Gtk.Requisition;
        get_root_window(): Gdk.Window;
        get_scale_factor(): number;
        get_screen(): Gdk.Screen;
        get_sensitive(): boolean;
        get_settings(): Gtk.Settings;
        get_size_request(): [number, number];
        get_state(): Gtk.StateType;
        get_state_flags(): Gtk.StateFlags;
        get_style(): Gtk.Style;
        get_style_context(): Gtk.StyleContext;
        get_support_multidevice(): boolean;
        get_template_child(widget_type: import("@girs/gobject-2.0").GObject.GType<unknown>, name: string | null): import("@girs/gobject-2.0").GObject.Object;
        get_tooltip_markup(): string | null;
        get_tooltip_text(): string | null;
        get_tooltip_window(): Gtk.Window;
        get_toplevel(): Gtk.Widget;
        get_valign(): Gtk.Align;
        get_valign_with_baseline(): Gtk.Align;
        get_vexpand(): boolean;
        get_vexpand_set(): boolean;
        get_visible(): boolean;
        get_visual(): Gdk.Visual;
        get_window(): Gdk.Window | null;
        grab_add(): void;
        grab_default(): void;
        grab_focus(): void;
        grab_remove(): void;
        has_grab(): boolean;
        has_rc_style(): boolean;
        has_screen(): boolean;
        has_visible_focus(): boolean;
        hide(): void;
        hide_on_delete(): boolean;
        in_destruction(): boolean;
        init_template(): void;
        input_shape_combine_region(region: import("@girs/cairo-1.0").cairo.Region | null): void;
        insert_action_group(name: string | null, group: import("@girs/gio-2.0").Gio.ActionGroup | null): void;
        intersect(area: Gdk.Rectangle): [boolean, Gdk.Rectangle];
        is_ancestor(ancestor: Gtk.Widget): boolean;
        is_composited(): boolean;
        is_drawable(): boolean;
        is_sensitive(): boolean;
        is_toplevel(): boolean;
        is_visible(): boolean;
        keynav_failed(direction: Gtk.DirectionType): boolean;
        list_accel_closures(): import("@girs/gobject-2.0").GObject.TClosure<any, any>[];
        list_action_prefixes(): string[];
        list_mnemonic_labels(): Gtk.Widget[];
        map(): void;
        mnemonic_activate(group_cycling: boolean): boolean;
        modify_base(state: Gtk.StateType, color: Gdk.Color | null): void;
        modify_bg(state: Gtk.StateType, color: Gdk.Color | null): void;
        modify_cursor(primary: Gdk.Color | null, secondary: Gdk.Color | null): void;
        modify_fg(state: Gtk.StateType, color: Gdk.Color | null): void;
        modify_font(font_desc: import("@girs/pango-1.0").Pango.FontDescription | null): void;
        modify_style(style: Gtk.RcStyle): void;
        modify_text(state: Gtk.StateType, color: Gdk.Color | null): void;
        override_background_color(state: Gtk.StateFlags, color: Gdk.RGBA | null): void;
        override_color(state: Gtk.StateFlags, color: Gdk.RGBA | null): void;
        override_cursor(cursor: Gdk.RGBA | null, secondary_cursor: Gdk.RGBA | null): void;
        override_font(font_desc: import("@girs/pango-1.0").Pango.FontDescription | null): void;
        override_symbolic_color(name: string | null, color: Gdk.RGBA | null): void;
        path(): [number, string | null, string | null];
        queue_allocate(): void;
        queue_compute_expand(): void;
        queue_draw(): void;
        queue_draw_area(x: number, y: number, width: number, height: number): void;
        queue_draw_region(region: import("@girs/cairo-1.0").cairo.Region): void;
        queue_resize(): void;
        queue_resize_no_redraw(): void;
        realize(): void;
        region_intersect(region: import("@girs/cairo-1.0").cairo.Region): import("@girs/cairo-1.0").cairo.Region;
        register_window(window: Gdk.Window): void;
        remove_accelerator(accel_group: Gtk.AccelGroup, accel_key: number, accel_mods: Gdk.ModifierType): boolean;
        remove_mnemonic_label(label: Gtk.Widget): void;
        remove_tick_callback(id: number): void;
        render_icon(stock_id: string | null, size: number, detail: string | null): import("@girs/gdkpixbuf-2.0").GdkPixbuf.Pixbuf | null;
        render_icon_pixbuf(stock_id: string | null, size: number): import("@girs/gdkpixbuf-2.0").GdkPixbuf.Pixbuf | null;
        reparent(new_parent: Gtk.Widget): void;
        reset_rc_styles(): void;
        reset_style(): void;
        send_expose(event: Gdk.Event): number;
        send_focus_change(event: Gdk.Event): boolean;
        set_accel_path(accel_path: string | null, accel_group: Gtk.AccelGroup | null): void;
        set_allocation(allocation: Gdk.Rectangle): void;
        set_app_paintable(app_paintable: boolean): void;
        set_can_default(can_default: boolean): void;
        set_can_focus(can_focus: boolean): void;
        set_child_visible(is_visible: boolean): void;
        set_clip(clip: Gdk.Rectangle): void;
        set_composite_name(name: string | null): void;
        set_device_enabled(device: Gdk.Device, enabled: boolean): void;
        set_device_events(device: Gdk.Device, events: Gdk.EventMask): void;
        set_direction(dir: Gtk.TextDirection): void;
        set_double_buffered(double_buffered: boolean): void;
        set_events(events: number): void;
        set_focus_on_click(focus_on_click: boolean): void;
        set_font_map(font_map: import("@girs/pango-1.0").Pango.FontMap | null): void;
        set_font_options(options: import("@girs/cairo-1.0").cairo.FontOptions | null): void;
        set_halign(align: Gtk.Align): void;
        set_has_tooltip(has_tooltip: boolean): void;
        set_has_window(has_window: boolean): void;
        set_hexpand(expand: boolean): void;
        set_hexpand_set(set: boolean): void;
        set_mapped(mapped: boolean): void;
        set_margin_bottom(margin: number): void;
        set_margin_end(margin: number): void;
        set_margin_left(margin: number): void;
        set_margin_right(margin: number): void;
        set_margin_start(margin: number): void;
        set_margin_top(margin: number): void;
        set_name(name: string | null): void;
        set_no_show_all(no_show_all: boolean): void;
        set_opacity(opacity: number): void;
        set_parent(parent: Gtk.Widget): void;
        set_parent_window(parent_window: Gdk.Window): void;
        set_realized(realized: boolean): void;
        set_receives_default(receives_default: boolean): void;
        set_redraw_on_allocate(redraw_on_allocate: boolean): void;
        set_sensitive(sensitive: boolean): void;
        set_size_request(width: number, height: number): void;
        set_state(state: Gtk.StateType): void;
        set_state_flags(flags: Gtk.StateFlags, clear: boolean): void;
        set_style(style: Gtk.Style | null): void;
        set_support_multidevice(support_multidevice: boolean): void;
        set_tooltip_markup(markup: string | null): void;
        set_tooltip_text(text: string | null): void;
        set_tooltip_window(custom_window: Gtk.Window | null): void;
        set_valign(align: Gtk.Align): void;
        set_vexpand(expand: boolean): void;
        set_vexpand_set(set: boolean): void;
        set_visible(visible: boolean): void;
        set_visual(visual: Gdk.Visual | null): void;
        set_window(window: Gdk.Window): void;
        shape_combine_region(region: import("@girs/cairo-1.0").cairo.Region | null): void;
        show(): void;
        show_all(): void;
        show_now(): void;
        size_allocate(allocation: Gdk.Rectangle): void;
        size_allocate_with_baseline(allocation: Gdk.Rectangle, baseline: number): void;
        size_request(): Gtk.Requisition;
        style_attach(): void;
        style_get_property(property_name: string | null, value: any): void;
        thaw_child_notify(): void;
        translate_coordinates(dest_widget: Gtk.Widget, src_x: number, src_y: number): [boolean, number, number];
        trigger_tooltip_query(): void;
        unmap(): void;
        unparent(): void;
        unrealize(): void;
        unregister_window(window: Gdk.Window): void;
        unset_state_flags(flags: Gtk.StateFlags): void;
        vfunc_adjust_baseline_allocation(baseline: number): void;
        vfunc_adjust_baseline_request(minimum_baseline: number, natural_baseline: number): void;
        vfunc_adjust_size_allocation(orientation: Gtk.Orientation, minimum_size: number, natural_size: number, allocated_pos: number, allocated_size: number): void;
        vfunc_adjust_size_request(orientation: Gtk.Orientation, minimum_size: number, natural_size: number): void;
        vfunc_button_press_event(event: Gdk.EventButton): boolean;
        vfunc_button_release_event(event: Gdk.EventButton): boolean;
        vfunc_can_activate_accel(signal_id: number): boolean;
        vfunc_child_notify(child_property: import("@girs/gobject-2.0").GObject.ParamSpec): void;
        vfunc_composited_changed(): void;
        vfunc_compute_expand(hexpand_p: boolean, vexpand_p: boolean): void;
        vfunc_configure_event(event: Gdk.EventConfigure): boolean;
        vfunc_damage_event(event: Gdk.EventExpose): boolean;
        vfunc_delete_event(event: Gdk.EventAny): boolean;
        vfunc_destroy(): void;
        vfunc_destroy_event(event: Gdk.EventAny): boolean;
        vfunc_direction_changed(previous_direction: Gtk.TextDirection): void;
        vfunc_dispatch_child_properties_changed(n_pspecs: number, pspecs: import("@girs/gobject-2.0").GObject.ParamSpec): void;
        vfunc_drag_begin(context: Gdk.DragContext): void;
        vfunc_drag_data_delete(context: Gdk.DragContext): void;
        vfunc_drag_data_get(context: Gdk.DragContext, selection_data: Gtk.SelectionData, info: number, time_: number): void;
        vfunc_drag_data_received(context: Gdk.DragContext, x: number, y: number, selection_data: Gtk.SelectionData, info: number, time_: number): void;
        vfunc_drag_drop(context: Gdk.DragContext, x: number, y: number, time_: number): boolean;
        vfunc_drag_end(context: Gdk.DragContext): void;
        vfunc_drag_failed(context: Gdk.DragContext, result: Gtk.DragResult): boolean;
        vfunc_drag_leave(context: Gdk.DragContext, time_: number): void;
        vfunc_drag_motion(context: Gdk.DragContext, x: number, y: number, time_: number): boolean;
        vfunc_draw(cr: import("@girs/cairo-1.0").cairo.Context): boolean;
        vfunc_enter_notify_event(event: Gdk.EventCrossing): boolean;
        vfunc_event(event: Gdk.Event): boolean;
        vfunc_focus(direction: Gtk.DirectionType): boolean;
        vfunc_focus_in_event(event: Gdk.EventFocus): boolean;
        vfunc_focus_out_event(event: Gdk.EventFocus): boolean;
        vfunc_get_accessible(): import("@girs/atk-1.0").Atk.Object;
        vfunc_get_preferred_height(): [number, number];
        vfunc_get_preferred_height_and_baseline_for_width(width: number): [number, number, number, number];
        vfunc_get_preferred_height_for_width(width: number): [number, number];
        vfunc_get_preferred_width(): [number, number];
        vfunc_get_preferred_width_for_height(height: number): [number, number];
        vfunc_get_request_mode(): Gtk.SizeRequestMode;
        vfunc_grab_broken_event(event: Gdk.EventGrabBroken): boolean;
        vfunc_grab_focus(): void;
        vfunc_grab_notify(was_grabbed: boolean): void;
        vfunc_hide(): void;
        vfunc_hierarchy_changed(previous_toplevel: Gtk.Widget): void;
        vfunc_key_press_event(event: Gdk.EventKey): boolean;
        vfunc_key_release_event(event: Gdk.EventKey): boolean;
        vfunc_keynav_failed(direction: Gtk.DirectionType): boolean;
        vfunc_leave_notify_event(event: Gdk.EventCrossing): boolean;
        vfunc_map(): void;
        vfunc_map_event(event: Gdk.EventAny): boolean;
        vfunc_mnemonic_activate(group_cycling: boolean): boolean;
        vfunc_motion_notify_event(event: Gdk.EventMotion): boolean;
        vfunc_move_focus(direction: Gtk.DirectionType): void;
        vfunc_parent_set(previous_parent: Gtk.Widget): void;
        vfunc_popup_menu(): boolean;
        vfunc_property_notify_event(event: Gdk.EventProperty): boolean;
        vfunc_proximity_in_event(event: Gdk.EventProximity): boolean;
        vfunc_proximity_out_event(event: Gdk.EventProximity): boolean;
        vfunc_query_tooltip(x: number, y: number, keyboard_tooltip: boolean, tooltip: Gtk.Tooltip): boolean;
        vfunc_queue_draw_region(region: import("@girs/cairo-1.0").cairo.Region): void;
        vfunc_realize(): void;
        vfunc_screen_changed(previous_screen: Gdk.Screen): void;
        vfunc_scroll_event(event: Gdk.EventScroll): boolean;
        vfunc_selection_clear_event(event: Gdk.EventSelection): boolean;
        vfunc_selection_get(selection_data: Gtk.SelectionData, info: number, time_: number): void;
        vfunc_selection_notify_event(event: Gdk.EventSelection): boolean;
        vfunc_selection_received(selection_data: Gtk.SelectionData, time_: number): void;
        vfunc_selection_request_event(event: Gdk.EventSelection): boolean;
        vfunc_show(): void;
        vfunc_show_all(): void;
        vfunc_show_help(help_type: Gtk.WidgetHelpType): boolean;
        vfunc_size_allocate(allocation: Gdk.Rectangle): void;
        vfunc_state_changed(previous_state: Gtk.StateType): void;
        vfunc_state_flags_changed(previous_state_flags: Gtk.StateFlags): void;
        vfunc_style_set(previous_style: Gtk.Style): void;
        vfunc_style_updated(): void;
        vfunc_touch_event(event: Gdk.EventTouch): boolean;
        vfunc_unmap(): void;
        vfunc_unmap_event(event: Gdk.EventAny): boolean;
        vfunc_unrealize(): void;
        vfunc_visibility_notify_event(event: Gdk.EventVisibility): boolean;
        vfunc_window_state_event(event: Gdk.EventWindowState): boolean;
        connect(sigName: "accel-closures-changed", callback: Gtk.Widget.AccelClosuresChangedSignalCallback): number;
        connect(sigName: "button-press-event", callback: Gtk.Widget.ButtonPressEventSignalCallback): number;
        connect(sigName: "button-release-event", callback: Gtk.Widget.ButtonReleaseEventSignalCallback): number;
        connect(sigName: "can-activate-accel", callback: Gtk.Widget.CanActivateAccelSignalCallback): number;
        connect(sigName: "child-notify", callback: Gtk.Widget.ChildNotifySignalCallback): number;
        connect(sigName: "composited-changed", callback: Gtk.Widget.CompositedChangedSignalCallback): number;
        connect(sigName: "configure-event", callback: Gtk.Widget.ConfigureEventSignalCallback): number;
        connect(sigName: "damage-event", callback: Gtk.Widget.DamageEventSignalCallback): number;
        connect(sigName: "delete-event", callback: Gtk.Widget.DeleteEventSignalCallback): number;
        connect(sigName: "destroy", callback: Gtk.Widget.DestroySignalCallback): number;
        connect(sigName: "destroy-event", callback: Gtk.Widget.DestroyEventSignalCallback): number;
        connect(sigName: "direction-changed", callback: Gtk.Widget.DirectionChangedSignalCallback): number;
        connect(sigName: "drag-begin", callback: Gtk.Widget.DragBeginSignalCallback): number;
        connect(sigName: "drag-data-delete", callback: Gtk.Widget.DragDataDeleteSignalCallback): number;
        connect(sigName: "drag-data-get", callback: Gtk.Widget.DragDataGetSignalCallback): number;
        connect(sigName: "drag-data-received", callback: Gtk.Widget.DragDataReceivedSignalCallback): number;
        connect(sigName: "drag-drop", callback: Gtk.Widget.DragDropSignalCallback): number;
        connect(sigName: "drag-end", callback: Gtk.Widget.DragEndSignalCallback): number;
        connect(sigName: "drag-failed", callback: Gtk.Widget.DragFailedSignalCallback): number;
        connect(sigName: "drag-leave", callback: Gtk.Widget.DragLeaveSignalCallback): number;
        connect(sigName: "drag-motion", callback: Gtk.Widget.DragMotionSignalCallback): number;
        connect(sigName: "draw", callback: Gtk.Widget.DrawSignalCallback): number;
        connect(sigName: "enter-notify-event", callback: Gtk.Widget.EnterNotifyEventSignalCallback): number;
        connect(sigName: "event", callback: Gtk.Widget.EventSignalCallback): number;
        connect(sigName: "event-after", callback: Gtk.Widget.EventAfterSignalCallback): number;
        connect(sigName: "focus", callback: Gtk.Widget.FocusSignalCallback): number;
        connect(sigName: "focus-in-event", callback: Gtk.Widget.FocusInEventSignalCallback): number;
        connect(sigName: "focus-out-event", callback: Gtk.Widget.FocusOutEventSignalCallback): number;
        connect(sigName: "grab-broken-event", callback: Gtk.Widget.GrabBrokenEventSignalCallback): number;
        connect(sigName: "grab-focus", callback: Gtk.Widget.GrabFocusSignalCallback): number;
        connect(sigName: "grab-notify", callback: Gtk.Widget.GrabNotifySignalCallback): number;
        connect(sigName: "hide", callback: Gtk.Widget.HideSignalCallback): number;
        connect(sigName: "hierarchy-changed", callback: Gtk.Widget.HierarchyChangedSignalCallback): number;
        connect(sigName: "key-press-event", callback: Gtk.Widget.KeyPressEventSignalCallback): number;
        connect(sigName: "key-release-event", callback: Gtk.Widget.KeyReleaseEventSignalCallback): number;
        connect(sigName: "keynav-failed", callback: Gtk.Widget.KeynavFailedSignalCallback): number;
        connect(sigName: "leave-notify-event", callback: Gtk.Widget.LeaveNotifyEventSignalCallback): number;
        connect(sigName: "map", callback: Gtk.Widget.MapSignalCallback): number;
        connect(sigName: "map-event", callback: Gtk.Widget.MapEventSignalCallback): number;
        connect(sigName: "mnemonic-activate", callback: Gtk.Widget.MnemonicActivateSignalCallback): number;
        connect(sigName: "motion-notify-event", callback: Gtk.Widget.MotionNotifyEventSignalCallback): number;
        connect(sigName: "move-focus", callback: Gtk.Widget.MoveFocusSignalCallback): number;
        connect(sigName: "parent-set", callback: Gtk.Widget.ParentSetSignalCallback): number;
        connect(sigName: "popup-menu", callback: Gtk.Widget.PopupMenuSignalCallback): number;
        connect(sigName: "property-notify-event", callback: Gtk.Widget.PropertyNotifyEventSignalCallback): number;
        connect(sigName: "proximity-in-event", callback: Gtk.Widget.ProximityInEventSignalCallback): number;
        connect(sigName: "proximity-out-event", callback: Gtk.Widget.ProximityOutEventSignalCallback): number;
        connect(sigName: "query-tooltip", callback: Gtk.Widget.QueryTooltipSignalCallback): number;
        connect(sigName: "realize", callback: Gtk.Widget.RealizeSignalCallback): number;
        connect(sigName: "screen-changed", callback: Gtk.Widget.ScreenChangedSignalCallback): number;
        connect(sigName: "scroll-event", callback: Gtk.Widget.ScrollEventSignalCallback): number;
        connect(sigName: "selection-clear-event", callback: Gtk.Widget.SelectionClearEventSignalCallback): number;
        connect(sigName: "selection-get", callback: Gtk.Widget.SelectionGetSignalCallback): number;
        connect(sigName: "selection-notify-event", callback: Gtk.Widget.SelectionNotifyEventSignalCallback): number;
        connect(sigName: "selection-received", callback: Gtk.Widget.SelectionReceivedSignalCallback): number;
        connect(sigName: "selection-request-event", callback: Gtk.Widget.SelectionRequestEventSignalCallback): number;
        connect(sigName: "show", callback: Gtk.Widget.ShowSignalCallback): number;
        connect(sigName: "show-help", callback: Gtk.Widget.ShowHelpSignalCallback): number;
        connect(sigName: "size-allocate", callback: Gtk.Widget.SizeAllocateSignalCallback): number;
        connect(sigName: "state-changed", callback: Gtk.Widget.StateChangedSignalCallback): number;
        connect(sigName: "state-flags-changed", callback: Gtk.Widget.StateFlagsChangedSignalCallback): number;
        connect(sigName: "style-set", callback: Gtk.Widget.StyleSetSignalCallback): number;
        connect(sigName: "style-updated", callback: Gtk.Widget.StyleUpdatedSignalCallback): number;
        connect(sigName: "touch-event", callback: Gtk.Widget.TouchEventSignalCallback): number;
        connect(sigName: "unmap", callback: Gtk.Widget.UnmapSignalCallback): number;
        connect(sigName: "unmap-event", callback: Gtk.Widget.UnmapEventSignalCallback): number;
        connect(sigName: "unrealize", callback: Gtk.Widget.UnrealizeSignalCallback): number;
        connect(sigName: "visibility-notify-event", callback: Gtk.Widget.VisibilityNotifyEventSignalCallback): number;
        connect(sigName: "window-state-event", callback: Gtk.Widget.WindowStateEventSignalCallback): number;
        connect(sigName: "notify::app-paintable", callback: ($obj: Gtk.Widget, pspec: import("@girs/gobject-2.0").GObject.ParamSpec) => void): number;
        connect(sigName: "notify::can-default", callback: ($obj: Gtk.Widget, pspec: import("@girs/gobject-2.0").GObject.ParamSpec) => void): number;
        connect(sigName: "notify::can-focus", callback: ($obj: Gtk.Widget, pspec: import("@girs/gobject-2.0").GObject.ParamSpec) => void): number;
        connect(sigName: "notify::composite-child", callback: ($obj: Gtk.Widget, pspec: import("@girs/gobject-2.0").GObject.ParamSpec) => void): number;
        connect(sigName: "notify::double-buffered", callback: ($obj: Gtk.Widget, pspec: import("@girs/gobject-2.0").GObject.ParamSpec) => void): number;
        connect(sigName: "notify::events", callback: ($obj: Gtk.Widget, pspec: import("@girs/gobject-2.0").GObject.ParamSpec) => void): number;
        connect(sigName: "notify::expand", callback: ($obj: Gtk.Widget, pspec: import("@girs/gobject-2.0").GObject.ParamSpec) => void): number;
        connect(sigName: "notify::focus-on-click", callback: ($obj: Gtk.Widget, pspec: import("@girs/gobject-2.0").GObject.ParamSpec) => void): number;
        connect(sigName: "notify::halign", callback: ($obj: Gtk.Widget, pspec: import("@girs/gobject-2.0").GObject.ParamSpec) => void): number;
        connect(sigName: "notify::has-default", callback: ($obj: Gtk.Widget, pspec: import("@girs/gobject-2.0").GObject.ParamSpec) => void): number;
        connect(sigName: "notify::has-focus", callback: ($obj: Gtk.Widget, pspec: import("@girs/gobject-2.0").GObject.ParamSpec) => void): number;
        connect(sigName: "notify::has-tooltip", callback: ($obj: Gtk.Widget, pspec: import("@girs/gobject-2.0").GObject.ParamSpec) => void): number;
        connect(sigName: "notify::height-request", callback: ($obj: Gtk.Widget, pspec: import("@girs/gobject-2.0").GObject.ParamSpec) => void): number;
        connect(sigName: "notify::hexpand", callback: ($obj: Gtk.Widget, pspec: import("@girs/gobject-2.0").GObject.ParamSpec) => void): number;
        connect(sigName: "notify::hexpand-set", callback: ($obj: Gtk.Widget, pspec: import("@girs/gobject-2.0").GObject.ParamSpec) => void): number;
        connect(sigName: "notify::is-focus", callback: ($obj: Gtk.Widget, pspec: import("@girs/gobject-2.0").GObject.ParamSpec) => void): number;
        connect(sigName: "notify::margin", callback: ($obj: Gtk.Widget, pspec: import("@girs/gobject-2.0").GObject.ParamSpec) => void): number;
        connect(sigName: "notify::margin-bottom", callback: ($obj: Gtk.Widget, pspec: import("@girs/gobject-2.0").GObject.ParamSpec) => void): number;
        connect(sigName: "notify::margin-end", callback: ($obj: Gtk.Widget, pspec: import("@girs/gobject-2.0").GObject.ParamSpec) => void): number;
        connect(sigName: "notify::margin-left", callback: ($obj: Gtk.Widget, pspec: import("@girs/gobject-2.0").GObject.ParamSpec) => void): number;
        connect(sigName: "notify::margin-right", callback: ($obj: Gtk.Widget, pspec: import("@girs/gobject-2.0").GObject.ParamSpec) => void): number;
        connect(sigName: "notify::margin-start", callback: ($obj: Gtk.Widget, pspec: import("@girs/gobject-2.0").GObject.ParamSpec) => void): number;
        connect(sigName: "notify::margin-top", callback: ($obj: Gtk.Widget, pspec: import("@girs/gobject-2.0").GObject.ParamSpec) => void): number;
        connect(sigName: "notify::name", callback: ($obj: Gtk.Widget, pspec: import("@girs/gobject-2.0").GObject.ParamSpec) => void): number;
        connect(sigName: "notify::no-show-all", callback: ($obj: Gtk.Widget, pspec: import("@girs/gobject-2.0").GObject.ParamSpec) => void): number;
        connect(sigName: "notify::opacity", callback: ($obj: Gtk.Widget, pspec: import("@girs/gobject-2.0").GObject.ParamSpec) => void): number;
        connect(sigName: "notify::parent", callback: ($obj: Gtk.Widget, pspec: import("@girs/gobject-2.0").GObject.ParamSpec) => void): number;
        connect(sigName: "notify::receives-default", callback: ($obj: Gtk.Widget, pspec: import("@girs/gobject-2.0").GObject.ParamSpec) => void): number;
        connect(sigName: "notify::scale-factor", callback: ($obj: Gtk.Widget, pspec: import("@girs/gobject-2.0").GObject.ParamSpec) => void): number;
        connect(sigName: "notify::sensitive", callback: ($obj: Gtk.Widget, pspec: import("@girs/gobject-2.0").GObject.ParamSpec) => void): number;
        connect(sigName: "notify::style", callback: ($obj: Gtk.Widget, pspec: import("@girs/gobject-2.0").GObject.ParamSpec) => void): number;
        connect(sigName: "notify::tooltip-markup", callback: ($obj: Gtk.Widget, pspec: import("@girs/gobject-2.0").GObject.ParamSpec) => void): number;
        connect(sigName: "notify::tooltip-text", callback: ($obj: Gtk.Widget, pspec: import("@girs/gobject-2.0").GObject.ParamSpec) => void): number;
        connect(sigName: "notify::valign", callback: ($obj: Gtk.Widget, pspec: import("@girs/gobject-2.0").GObject.ParamSpec) => void): number;
        connect(sigName: "notify::vexpand", callback: ($obj: Gtk.Widget, pspec: import("@girs/gobject-2.0").GObject.ParamSpec) => void): number;
        connect(sigName: "notify::vexpand-set", callback: ($obj: Gtk.Widget, pspec: import("@girs/gobject-2.0").GObject.ParamSpec) => void): number;
        connect(sigName: "notify::visible", callback: ($obj: Gtk.Widget, pspec: import("@girs/gobject-2.0").GObject.ParamSpec) => void): number;
        connect(sigName: "notify::width-request", callback: ($obj: Gtk.Widget, pspec: import("@girs/gobject-2.0").GObject.ParamSpec) => void): number;
        connect(sigName: "notify::window", callback: ($obj: Gtk.Widget, pspec: import("@girs/gobject-2.0").GObject.ParamSpec) => void): number;
        connect(sigName: string, callback: (...args: any[]) => void): number;
        connect_after(sigName: "accel-closures-changed", callback: Gtk.Widget.AccelClosuresChangedSignalCallback): number;
        connect_after(sigName: "button-press-event", callback: Gtk.Widget.ButtonPressEventSignalCallback): number;
        connect_after(sigName: "button-release-event", callback: Gtk.Widget.ButtonReleaseEventSignalCallback): number;
        connect_after(sigName: "can-activate-accel", callback: Gtk.Widget.CanActivateAccelSignalCallback): number;
        connect_after(sigName: "child-notify", callback: Gtk.Widget.ChildNotifySignalCallback): number;
        connect_after(sigName: "composited-changed", callback: Gtk.Widget.CompositedChangedSignalCallback): number;
        connect_after(sigName: "configure-event", callback: Gtk.Widget.ConfigureEventSignalCallback): number;
        connect_after(sigName: "damage-event", callback: Gtk.Widget.DamageEventSignalCallback): number;
        connect_after(sigName: "delete-event", callback: Gtk.Widget.DeleteEventSignalCallback): number;
        connect_after(sigName: "destroy", callback: Gtk.Widget.DestroySignalCallback): number;
        connect_after(sigName: "destroy-event", callback: Gtk.Widget.DestroyEventSignalCallback): number;
        connect_after(sigName: "direction-changed", callback: Gtk.Widget.DirectionChangedSignalCallback): number;
        connect_after(sigName: "drag-begin", callback: Gtk.Widget.DragBeginSignalCallback): number;
        connect_after(sigName: "drag-data-delete", callback: Gtk.Widget.DragDataDeleteSignalCallback): number;
        connect_after(sigName: "drag-data-get", callback: Gtk.Widget.DragDataGetSignalCallback): number;
        connect_after(sigName: "drag-data-received", callback: Gtk.Widget.DragDataReceivedSignalCallback): number;
        connect_after(sigName: "drag-drop", callback: Gtk.Widget.DragDropSignalCallback): number;
        connect_after(sigName: "drag-end", callback: Gtk.Widget.DragEndSignalCallback): number;
        connect_after(sigName: "drag-failed", callback: Gtk.Widget.DragFailedSignalCallback): number;
        connect_after(sigName: "drag-leave", callback: Gtk.Widget.DragLeaveSignalCallback): number;
        connect_after(sigName: "drag-motion", callback: Gtk.Widget.DragMotionSignalCallback): number;
        connect_after(sigName: "draw", callback: Gtk.Widget.DrawSignalCallback): number;
        connect_after(sigName: "enter-notify-event", callback: Gtk.Widget.EnterNotifyEventSignalCallback): number;
        connect_after(sigName: "event", callback: Gtk.Widget.EventSignalCallback): number;
        connect_after(sigName: "event-after", callback: Gtk.Widget.EventAfterSignalCallback): number;
        connect_after(sigName: "focus", callback: Gtk.Widget.FocusSignalCallback): number;
        connect_after(sigName: "focus-in-event", callback: Gtk.Widget.FocusInEventSignalCallback): number;
        connect_after(sigName: "focus-out-event", callback: Gtk.Widget.FocusOutEventSignalCallback): number;
        connect_after(sigName: "grab-broken-event", callback: Gtk.Widget.GrabBrokenEventSignalCallback): number;
        connect_after(sigName: "grab-focus", callback: Gtk.Widget.GrabFocusSignalCallback): number;
        connect_after(sigName: "grab-notify", callback: Gtk.Widget.GrabNotifySignalCallback): number;
        connect_after(sigName: "hide", callback: Gtk.Widget.HideSignalCallback): number;
        connect_after(sigName: "hierarchy-changed", callback: Gtk.Widget.HierarchyChangedSignalCallback): number;
        connect_after(sigName: "key-press-event", callback: Gtk.Widget.KeyPressEventSignalCallback): number;
        connect_after(sigName: "key-release-event", callback: Gtk.Widget.KeyReleaseEventSignalCallback): number;
        connect_after(sigName: "keynav-failed", callback: Gtk.Widget.KeynavFailedSignalCallback): number;
        connect_after(sigName: "leave-notify-event", callback: Gtk.Widget.LeaveNotifyEventSignalCallback): number;
        connect_after(sigName: "map", callback: Gtk.Widget.MapSignalCallback): number;
        connect_after(sigName: "map-event", callback: Gtk.Widget.MapEventSignalCallback): number;
        connect_after(sigName: "mnemonic-activate", callback: Gtk.Widget.MnemonicActivateSignalCallback): number;
        connect_after(sigName: "motion-notify-event", callback: Gtk.Widget.MotionNotifyEventSignalCallback): number;
        connect_after(sigName: "move-focus", callback: Gtk.Widget.MoveFocusSignalCallback): number;
        connect_after(sigName: "parent-set", callback: Gtk.Widget.ParentSetSignalCallback): number;
        connect_after(sigName: "popup-menu", callback: Gtk.Widget.PopupMenuSignalCallback): number;
        connect_after(sigName: "property-notify-event", callback: Gtk.Widget.PropertyNotifyEventSignalCallback): number;
        connect_after(sigName: "proximity-in-event", callback: Gtk.Widget.ProximityInEventSignalCallback): number;
        connect_after(sigName: "proximity-out-event", callback: Gtk.Widget.ProximityOutEventSignalCallback): number;
        connect_after(sigName: "query-tooltip", callback: Gtk.Widget.QueryTooltipSignalCallback): number;
        connect_after(sigName: "realize", callback: Gtk.Widget.RealizeSignalCallback): number;
        connect_after(sigName: "screen-changed", callback: Gtk.Widget.ScreenChangedSignalCallback): number;
        connect_after(sigName: "scroll-event", callback: Gtk.Widget.ScrollEventSignalCallback): number;
        connect_after(sigName: "selection-clear-event", callback: Gtk.Widget.SelectionClearEventSignalCallback): number;
        connect_after(sigName: "selection-get", callback: Gtk.Widget.SelectionGetSignalCallback): number;
        connect_after(sigName: "selection-notify-event", callback: Gtk.Widget.SelectionNotifyEventSignalCallback): number;
        connect_after(sigName: "selection-received", callback: Gtk.Widget.SelectionReceivedSignalCallback): number;
        connect_after(sigName: "selection-request-event", callback: Gtk.Widget.SelectionRequestEventSignalCallback): number;
        connect_after(sigName: "show", callback: Gtk.Widget.ShowSignalCallback): number;
        connect_after(sigName: "show-help", callback: Gtk.Widget.ShowHelpSignalCallback): number;
        connect_after(sigName: "size-allocate", callback: Gtk.Widget.SizeAllocateSignalCallback): number;
        connect_after(sigName: "state-changed", callback: Gtk.Widget.StateChangedSignalCallback): number;
        connect_after(sigName: "state-flags-changed", callback: Gtk.Widget.StateFlagsChangedSignalCallback): number;
        connect_after(sigName: "style-set", callback: Gtk.Widget.StyleSetSignalCallback): number;
        connect_after(sigName: "style-updated", callback: Gtk.Widget.StyleUpdatedSignalCallback): number;
        connect_after(sigName: "touch-event", callback: Gtk.Widget.TouchEventSignalCallback): number;
        connect_after(sigName: "unmap", callback: Gtk.Widget.UnmapSignalCallback): number;
        connect_after(sigName: "unmap-event", callback: Gtk.Widget.UnmapEventSignalCallback): number;
        connect_after(sigName: "unrealize", callback: Gtk.Widget.UnrealizeSignalCallback): number;
        connect_after(sigName: "visibility-notify-event", callback: Gtk.Widget.VisibilityNotifyEventSignalCallback): number;
        connect_after(sigName: "window-state-event", callback: Gtk.Widget.WindowStateEventSignalCallback): number;
        connect_after(sigName: "notify::app-paintable", callback: ($obj: Gtk.Widget, pspec: import("@girs/gobject-2.0").GObject.ParamSpec) => void): number;
        connect_after(sigName: "notify::can-default", callback: ($obj: Gtk.Widget, pspec: import("@girs/gobject-2.0").GObject.ParamSpec) => void): number;
        connect_after(sigName: "notify::can-focus", callback: ($obj: Gtk.Widget, pspec: import("@girs/gobject-2.0").GObject.ParamSpec) => void): number;
        connect_after(sigName: "notify::composite-child", callback: ($obj: Gtk.Widget, pspec: import("@girs/gobject-2.0").GObject.ParamSpec) => void): number;
        connect_after(sigName: "notify::double-buffered", callback: ($obj: Gtk.Widget, pspec: import("@girs/gobject-2.0").GObject.ParamSpec) => void): number;
        connect_after(sigName: "notify::events", callback: ($obj: Gtk.Widget, pspec: import("@girs/gobject-2.0").GObject.ParamSpec) => void): number;
        connect_after(sigName: "notify::expand", callback: ($obj: Gtk.Widget, pspec: import("@girs/gobject-2.0").GObject.ParamSpec) => void): number;
        connect_after(sigName: "notify::focus-on-click", callback: ($obj: Gtk.Widget, pspec: import("@girs/gobject-2.0").GObject.ParamSpec) => void): number;
        connect_after(sigName: "notify::halign", callback: ($obj: Gtk.Widget, pspec: import("@girs/gobject-2.0").GObject.ParamSpec) => void): number;
        connect_after(sigName: "notify::has-default", callback: ($obj: Gtk.Widget, pspec: import("@girs/gobject-2.0").GObject.ParamSpec) => void): number;
        connect_after(sigName: "notify::has-focus", callback: ($obj: Gtk.Widget, pspec: import("@girs/gobject-2.0").GObject.ParamSpec) => void): number;
        connect_after(sigName: "notify::has-tooltip", callback: ($obj: Gtk.Widget, pspec: import("@girs/gobject-2.0").GObject.ParamSpec) => void): number;
        connect_after(sigName: "notify::height-request", callback: ($obj: Gtk.Widget, pspec: import("@girs/gobject-2.0").GObject.ParamSpec) => void): number;
        connect_after(sigName: "notify::hexpand", callback: ($obj: Gtk.Widget, pspec: import("@girs/gobject-2.0").GObject.ParamSpec) => void): number;
        connect_after(sigName: "notify::hexpand-set", callback: ($obj: Gtk.Widget, pspec: import("@girs/gobject-2.0").GObject.ParamSpec) => void): number;
        connect_after(sigName: "notify::is-focus", callback: ($obj: Gtk.Widget, pspec: import("@girs/gobject-2.0").GObject.ParamSpec) => void): number;
        connect_after(sigName: "notify::margin", callback: ($obj: Gtk.Widget, pspec: import("@girs/gobject-2.0").GObject.ParamSpec) => void): number;
        connect_after(sigName: "notify::margin-bottom", callback: ($obj: Gtk.Widget, pspec: import("@girs/gobject-2.0").GObject.ParamSpec) => void): number;
        connect_after(sigName: "notify::margin-end", callback: ($obj: Gtk.Widget, pspec: import("@girs/gobject-2.0").GObject.ParamSpec) => void): number;
        connect_after(sigName: "notify::margin-left", callback: ($obj: Gtk.Widget, pspec: import("@girs/gobject-2.0").GObject.ParamSpec) => void): number;
        connect_after(sigName: "notify::margin-right", callback: ($obj: Gtk.Widget, pspec: import("@girs/gobject-2.0").GObject.ParamSpec) => void): number;
        connect_after(sigName: "notify::margin-start", callback: ($obj: Gtk.Widget, pspec: import("@girs/gobject-2.0").GObject.ParamSpec) => void): number;
        connect_after(sigName: "notify::margin-top", callback: ($obj: Gtk.Widget, pspec: import("@girs/gobject-2.0").GObject.ParamSpec) => void): number;
        connect_after(sigName: "notify::name", callback: ($obj: Gtk.Widget, pspec: import("@girs/gobject-2.0").GObject.ParamSpec) => void): number;
        connect_after(sigName: "notify::no-show-all", callback: ($obj: Gtk.Widget, pspec: import("@girs/gobject-2.0").GObject.ParamSpec) => void): number;
        connect_after(sigName: "notify::opacity", callback: ($obj: Gtk.Widget, pspec: import("@girs/gobject-2.0").GObject.ParamSpec) => void): number;
        connect_after(sigName: "notify::parent", callback: ($obj: Gtk.Widget, pspec: import("@girs/gobject-2.0").GObject.ParamSpec) => void): number;
        connect_after(sigName: "notify::receives-default", callback: ($obj: Gtk.Widget, pspec: import("@girs/gobject-2.0").GObject.ParamSpec) => void): number;
        connect_after(sigName: "notify::scale-factor", callback: ($obj: Gtk.Widget, pspec: import("@girs/gobject-2.0").GObject.ParamSpec) => void): number;
        connect_after(sigName: "notify::sensitive", callback: ($obj: Gtk.Widget, pspec: import("@girs/gobject-2.0").GObject.ParamSpec) => void): number;
        connect_after(sigName: "notify::style", callback: ($obj: Gtk.Widget, pspec: import("@girs/gobject-2.0").GObject.ParamSpec) => void): number;
        connect_after(sigName: "notify::tooltip-markup", callback: ($obj: Gtk.Widget, pspec: import("@girs/gobject-2.0").GObject.ParamSpec) => void): number;
        connect_after(sigName: "notify::tooltip-text", callback: ($obj: Gtk.Widget, pspec: import("@girs/gobject-2.0").GObject.ParamSpec) => void): number;
        connect_after(sigName: "notify::valign", callback: ($obj: Gtk.Widget, pspec: import("@girs/gobject-2.0").GObject.ParamSpec) => void): number;
        connect_after(sigName: "notify::vexpand", callback: ($obj: Gtk.Widget, pspec: import("@girs/gobject-2.0").GObject.ParamSpec) => void): number;
        connect_after(sigName: "notify::vexpand-set", callback: ($obj: Gtk.Widget, pspec: import("@girs/gobject-2.0").GObject.ParamSpec) => void): number;
        connect_after(sigName: "notify::visible", callback: ($obj: Gtk.Widget, pspec: import("@girs/gobject-2.0").GObject.ParamSpec) => void): number;
        connect_after(sigName: "notify::width-request", callback: ($obj: Gtk.Widget, pspec: import("@girs/gobject-2.0").GObject.ParamSpec) => void): number;
        connect_after(sigName: "notify::window", callback: ($obj: Gtk.Widget, pspec: import("@girs/gobject-2.0").GObject.ParamSpec) => void): number;
        connect_after(sigName: string, callback: (...args: any[]) => void): number;
        emit(sigName: "accel-closures-changed", ...args: any[]): void;
        emit(sigName: "button-press-event", event: Gdk.EventButton, ...args: any[]): void;
        emit(sigName: "button-release-event", event: Gdk.EventButton, ...args: any[]): void;
        emit(sigName: "can-activate-accel", signal_id: number, ...args: any[]): void;
        emit(sigName: "child-notify", child_property: import("@girs/gobject-2.0").GObject.ParamSpec, ...args: any[]): void;
        emit(sigName: "composited-changed", ...args: any[]): void;
        emit(sigName: "configure-event", event: Gdk.EventConfigure, ...args: any[]): void;
        emit(sigName: "damage-event", event: Gdk.EventExpose, ...args: any[]): void;
        emit(sigName: "delete-event", event: Gdk.Event, ...args: any[]): void;
        emit(sigName: "destroy", ...args: any[]): void;
        emit(sigName: "destroy-event", event: Gdk.Event, ...args: any[]): void;
        emit(sigName: "direction-changed", previous_direction: Gtk.TextDirection, ...args: any[]): void;
        emit(sigName: "drag-begin", context: Gdk.DragContext, ...args: any[]): void;
        emit(sigName: "drag-data-delete", context: Gdk.DragContext, ...args: any[]): void;
        emit(sigName: "drag-data-get", context: Gdk.DragContext, data: Gtk.SelectionData, info: number, time: number, ...args: any[]): void;
        emit(sigName: "drag-data-received", context: Gdk.DragContext, x: number, y: number, data: Gtk.SelectionData, info: number, time: number, ...args: any[]): void;
        emit(sigName: "drag-drop", context: Gdk.DragContext, x: number, y: number, time: number, ...args: any[]): void;
        emit(sigName: "drag-end", context: Gdk.DragContext, ...args: any[]): void;
        emit(sigName: "drag-failed", context: Gdk.DragContext, result: Gtk.DragResult, ...args: any[]): void;
        emit(sigName: "drag-leave", context: Gdk.DragContext, time: number, ...args: any[]): void;
        emit(sigName: "drag-motion", context: Gdk.DragContext, x: number, y: number, time: number, ...args: any[]): void;
        emit(sigName: "draw", cr: import("@girs/cairo-1.0").cairo.Context, ...args: any[]): void;
        emit(sigName: "enter-notify-event", event: Gdk.EventCrossing, ...args: any[]): void;
        emit(sigName: "event", event: Gdk.Event, ...args: any[]): void;
        emit(sigName: "event-after", event: Gdk.Event, ...args: any[]): void;
        emit(sigName: "focus", direction: Gtk.DirectionType, ...args: any[]): void;
        emit(sigName: "focus-in-event", event: Gdk.EventFocus, ...args: any[]): void;
        emit(sigName: "focus-out-event", event: Gdk.EventFocus, ...args: any[]): void;
        emit(sigName: "grab-broken-event", event: Gdk.EventGrabBroken, ...args: any[]): void;
        emit(sigName: "grab-focus", ...args: any[]): void;
        emit(sigName: "grab-notify", was_grabbed: boolean, ...args: any[]): void;
        emit(sigName: "hide", ...args: any[]): void;
        emit(sigName: "hierarchy-changed", previous_toplevel: Gtk.Widget | null, ...args: any[]): void;
        emit(sigName: "key-press-event", event: Gdk.EventKey, ...args: any[]): void;
        emit(sigName: "key-release-event", event: Gdk.EventKey, ...args: any[]): void;
        emit(sigName: "keynav-failed", direction: Gtk.DirectionType, ...args: any[]): void;
        emit(sigName: "leave-notify-event", event: Gdk.EventCrossing, ...args: any[]): void;
        emit(sigName: "map", ...args: any[]): void;
        emit(sigName: "map-event", event: Gdk.EventAny, ...args: any[]): void;
        emit(sigName: "mnemonic-activate", group_cycling: boolean, ...args: any[]): void;
        emit(sigName: "motion-notify-event", event: Gdk.EventMotion, ...args: any[]): void;
        emit(sigName: "move-focus", direction: Gtk.DirectionType, ...args: any[]): void;
        emit(sigName: "parent-set", old_parent: Gtk.Widget | null, ...args: any[]): void;
        emit(sigName: "popup-menu", ...args: any[]): void;
        emit(sigName: "property-notify-event", event: Gdk.EventProperty, ...args: any[]): void;
        emit(sigName: "proximity-in-event", event: Gdk.EventProximity, ...args: any[]): void;
        emit(sigName: "proximity-out-event", event: Gdk.EventProximity, ...args: any[]): void;
        emit(sigName: "query-tooltip", x: number, y: number, keyboard_mode: boolean, tooltip: Gtk.Tooltip, ...args: any[]): void;
        emit(sigName: "realize", ...args: any[]): void;
        emit(sigName: "screen-changed", previous_screen: Gdk.Screen | null, ...args: any[]): void;
        emit(sigName: "scroll-event", event: Gdk.EventScroll, ...args: any[]): void;
        emit(sigName: "selection-clear-event", event: Gdk.EventSelection, ...args: any[]): void;
        emit(sigName: "selection-get", data: Gtk.SelectionData, info: number, time: number, ...args: any[]): void;
        emit(sigName: "selection-notify-event", event: Gdk.EventSelection, ...args: any[]): void;
        emit(sigName: "selection-received", data: Gtk.SelectionData, time: number, ...args: any[]): void;
        emit(sigName: "selection-request-event", event: Gdk.EventSelection, ...args: any[]): void;
        emit(sigName: "show", ...args: any[]): void;
        emit(sigName: "show-help", help_type: Gtk.WidgetHelpType, ...args: any[]): void;
        emit(sigName: "size-allocate", allocation: Gdk.Rectangle, ...args: any[]): void;
        emit(sigName: "state-changed", state: Gtk.StateType, ...args: any[]): void;
        emit(sigName: "state-flags-changed", flags: Gtk.StateFlags, ...args: any[]): void;
        emit(sigName: "style-set", previous_style: Gtk.Style | null, ...args: any[]): void;
        emit(sigName: "style-updated", ...args: any[]): void;
        emit(sigName: "touch-event", object: Gdk.Event, ...args: any[]): void;
        emit(sigName: "unmap", ...args: any[]): void;
        emit(sigName: "unmap-event", event: Gdk.EventAny, ...args: any[]): void;
        emit(sigName: "unrealize", ...args: any[]): void;
        emit(sigName: "visibility-notify-event", event: Gdk.EventVisibility, ...args: any[]): void;
        emit(sigName: "window-state-event", event: Gdk.EventWindowState, ...args: any[]): void;
        emit(sigName: "notify::app-paintable", ...args: any[]): void;
        emit(sigName: "notify::can-default", ...args: any[]): void;
        emit(sigName: "notify::can-focus", ...args: any[]): void;
        emit(sigName: "notify::composite-child", ...args: any[]): void;
        emit(sigName: "notify::double-buffered", ...args: any[]): void;
        emit(sigName: "notify::events", ...args: any[]): void;
        emit(sigName: "notify::expand", ...args: any[]): void;
        emit(sigName: "notify::focus-on-click", ...args: any[]): void;
        emit(sigName: "notify::halign", ...args: any[]): void;
        emit(sigName: "notify::has-default", ...args: any[]): void;
        emit(sigName: "notify::has-focus", ...args: any[]): void;
        emit(sigName: "notify::has-tooltip", ...args: any[]): void;
        emit(sigName: "notify::height-request", ...args: any[]): void;
        emit(sigName: "notify::hexpand", ...args: any[]): void;
        emit(sigName: "notify::hexpand-set", ...args: any[]): void;
        emit(sigName: "notify::is-focus", ...args: any[]): void;
        emit(sigName: "notify::margin", ...args: any[]): void;
        emit(sigName: "notify::margin-bottom", ...args: any[]): void;
        emit(sigName: "notify::margin-end", ...args: any[]): void;
        emit(sigName: "notify::margin-left", ...args: any[]): void;
        emit(sigName: "notify::margin-right", ...args: any[]): void;
        emit(sigName: "notify::margin-start", ...args: any[]): void;
        emit(sigName: "notify::margin-top", ...args: any[]): void;
        emit(sigName: "notify::name", ...args: any[]): void;
        emit(sigName: "notify::no-show-all", ...args: any[]): void;
        emit(sigName: "notify::opacity", ...args: any[]): void;
        emit(sigName: "notify::parent", ...args: any[]): void;
        emit(sigName: "notify::receives-default", ...args: any[]): void;
        emit(sigName: "notify::scale-factor", ...args: any[]): void;
        emit(sigName: "notify::sensitive", ...args: any[]): void;
        emit(sigName: "notify::style", ...args: any[]): void;
        emit(sigName: "notify::tooltip-markup", ...args: any[]): void;
        emit(sigName: "notify::tooltip-text", ...args: any[]): void;
        emit(sigName: "notify::valign", ...args: any[]): void;
        emit(sigName: "notify::vexpand", ...args: any[]): void;
        emit(sigName: "notify::vexpand-set", ...args: any[]): void;
        emit(sigName: "notify::visible", ...args: any[]): void;
        emit(sigName: "notify::width-request", ...args: any[]): void;
        emit(sigName: "notify::window", ...args: any[]): void;
        emit(sigName: string, ...args: any[]): void;
        disconnect(id: number): void;
        g_type_instance: import("@girs/gobject-2.0").GObject.TypeInstance;
        bind_property(source_property: string | null, target: import("@girs/gobject-2.0").GObject.Object, target_property: string | null, flags: import("@girs/gobject-2.0").GObject.BindingFlags): import("@girs/gobject-2.0").GObject.Binding;
        bind_property_full(source_property: string | null, target: import("@girs/gobject-2.0").GObject.Object, target_property: string | null, flags: import("@girs/gobject-2.0").GObject.BindingFlags, transform_to: import("@girs/gobject-2.0").GObject.TClosure<any, any>, transform_from: import("@girs/gobject-2.0").GObject.TClosure<any, any>): import("@girs/gobject-2.0").GObject.Binding;
        force_floating(): void;
        freeze_notify(): void;
        get_data(key: string | null): any;
        get_property(property_name: string | null, value: any): void;
        get_qdata(quark: number): any;
        getv(names: string[], values: any[]): void;
        is_floating(): boolean;
        notify(property_name: string | null): void;
        notify_by_pspec(pspec: import("@girs/gobject-2.0").GObject.ParamSpec): void;
        ref(): import("@girs/gobject-2.0").GObject.Object;
        ref_sink(): import("@girs/gobject-2.0").GObject.Object;
        run_dispose(): void;
        set_data(key: string | null, data: any): void;
        set_property(property_name: string | null, value: any): void;
        steal_data(key: string | null): any;
        steal_qdata(quark: number): any;
        thaw_notify(): void;
        unref(): void;
        watch_closure(closure: import("@girs/gobject-2.0").GObject.TClosure<any, any>): void;
        vfunc_constructed(): void;
        vfunc_dispatch_properties_changed(n_pspecs: number, pspecs: import("@girs/gobject-2.0").GObject.ParamSpec): void;
        vfunc_dispose(): void;
        vfunc_finalize(): void;
        vfunc_get_property(property_id: number, value: any, pspec: import("@girs/gobject-2.0").GObject.ParamSpec): void;
        vfunc_notify(pspec: import("@girs/gobject-2.0").GObject.ParamSpec): void;
        vfunc_set_property(property_id: number, value: any, pspec: import("@girs/gobject-2.0").GObject.ParamSpec): void;
        add_child(builder: Gtk.Builder, child: import("@girs/gobject-2.0").GObject.Object, type: string | null): void;
        construct_child(builder: Gtk.Builder, name: string | null): import("@girs/gobject-2.0").GObject.Object;
        custom_finished(builder: Gtk.Builder, child: import("@girs/gobject-2.0").GObject.Object | null, tagname: string | null, data: any): void;
        custom_tag_end(builder: Gtk.Builder, child: import("@girs/gobject-2.0").GObject.Object | null, tagname: string | null, data: any): void;
        custom_tag_start(builder: Gtk.Builder, child: import("@girs/gobject-2.0").GObject.Object | null, tagname: string | null): [boolean, import("@girs/glib-2.0").GLib.MarkupParser, any];
        get_internal_child(builder: Gtk.Builder, childname: string | null): import("@girs/gobject-2.0").GObject.Object;
        parser_finished(builder: Gtk.Builder): void;
        set_buildable_property(builder: Gtk.Builder, name: string | null, value: any): void;
        vfunc_add_child(builder: Gtk.Builder, child: import("@girs/gobject-2.0").GObject.Object, type: string | null): void;
        vfunc_construct_child(builder: Gtk.Builder, name: string | null): import("@girs/gobject-2.0").GObject.Object;
        vfunc_custom_finished(builder: Gtk.Builder, child: import("@girs/gobject-2.0").GObject.Object | null, tagname: string | null, data: any): void;
        vfunc_custom_tag_end(builder: Gtk.Builder, child: import("@girs/gobject-2.0").GObject.Object | null, tagname: string | null, data: any): void;
        vfunc_custom_tag_start(builder: Gtk.Builder, child: import("@girs/gobject-2.0").GObject.Object | null, tagname: string | null): [boolean, import("@girs/glib-2.0").GLib.MarkupParser, any];
        vfunc_get_internal_child(builder: Gtk.Builder, childname: string | null): import("@girs/gobject-2.0").GObject.Object;
        vfunc_get_name(): string | null;
        vfunc_parser_finished(builder: Gtk.Builder): void;
        vfunc_set_buildable_property(builder: Gtk.Builder, name: string | null, value: any): void;
        vfunc_set_name(name: string | null): void;
    };
} & typeof Gtk.EventBox;
export default class AgsEventBox extends AgsEventBox_base {
    constructor(props?: EventBoxProps);
    get on_hover(): EventHandler;
    set on_hover(callback: EventHandler);
    get on_hover_lost(): EventHandler;
    set on_hover_lost(callback: EventHandler);
    get on_scroll_up(): EventHandler;
    set on_scroll_up(callback: EventHandler);
    get on_scroll_down(): EventHandler;
    set on_scroll_down(callback: EventHandler);
    get on_primary_click(): EventHandler;
    set on_primary_click(callback: EventHandler);
    get on_middle_click(): EventHandler;
    set on_middle_click(callback: EventHandler);
    get on_secondary_click(): EventHandler;
    set on_secondary_click(callback: EventHandler);
    get on_primary_click_release(): EventHandler;
    set on_primary_click_release(callback: EventHandler);
    get on_middle_click_release(): EventHandler;
    set on_middle_click_release(callback: EventHandler);
    get on_secondary_click_release(): EventHandler;
    set on_secondary_click_release(callback: EventHandler);
}
export {};
