(include "./settingswidget.yuck")

(defvar WINDOW_HEIGHT "30px")

(defpoll time
  :interval "5s"
  `date +'%a, %-m/%d %-I:%M %P'`
)
(defpoll memory
  :interval "5s"
  `'free' -h | grep '^Mem' | tr -s '[:space:]' | cut -d ' ' -f 3`
)
(defpoll mousebattery
  :interval "15s"
  `touchpadtoggle.sh -ml`
)
;(defpoll workspaces
  ;  :interval "1s"
  ;  `echo "hi"`
;)

(deflisten touchpadstatus
  :initial "hilo"
  `touchpadtoggle.sh -w`
)

(deflisten title
  :initial ""
  `i3-msg -t subscribe -m '[ "window" ]'`
)

(deflisten battery
  `scripts/battery.sh`
)

(deflisten workspaces
  :initial 'h'
  `/home/vlk/.config/eww/scripts/workspaces.sh`
)
;(deflisten workspaces
  ;  `while :; do echo "(box :class 'workspaces' $('ls' ~ | grep -o '^.' | sed 's/^/(button "/g ; s/$/")/g')"; sleep 1; done`
  ;  )
  
  ;(defwidget workspace_module[ws]
    ;  (box :class "workspaces"
      ;    :spacing 10
      ;    ;(literal :content workspaces)
      ;    for entry in ws
      ;    (button
        ;      :onclick "notify-send ${ws.name}"
        ;      "${ws.name}"
      ;    )
    ;  )
  ;)
  
  (defwidget clock_module[time]
    (label
      :text "${time}"
      :class "bar_widget"
      :initial "date"
    )
  )
  
  (defwindow ewwbar
    :stacking "fg"
    :windowtype "normal"
    :wm-ignore true
    :geometry (geometry
      :width "100%"
      :height: "30px"
    )
    (box
      :class "bar_box"
      :space-evenly false
      :spacing 12
      
      (button
        :onclick "$VLK_DMENU_ONE"
        :onrightclick "notify-send menuoptions"
        :class "bar_widget menu_button"
        :tooltip "Show Menu"
        " "
      )
      (box :class "workspaces"
        :spacing 10
        (for ws in workspaces
          (button
            :onclick "i3-msg workspace number ${ws.num}"
            :class "${ws.class}"
            "${ws.name}"
          )
        )
      )
      
      ;(workspaces_example)
      (label
        :text "${title.container.window_properties.title}"
        :class "bar_widget"
        :hexpand true
      )
      
      (label
        :text "${memory}B"
        :class "bar_widget"
        :tooltip "Show system monitor"
      )
      
      (label
        :text "${touchpadstatus} ${mousebattery}"
        :class "bar_widget"
      )
      
      (label
        :text "${battery.icon} ${battery.percentage}${battery.power}"
        :class "bar_widget battery-${battery.state}"
      )
      
      (clock_module :time {time})
    )
  )
  