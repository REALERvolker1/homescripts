#!/usr/bin/env python3

from i3ipc import Connection, Con
from i3ipc.events import Event
# from i3ipc import Events
import asyncio
import json


def pprint(json_str):
    formatted = json_str
    # formatted = json.dumps(json_str, indent=2)
    strvalues = ""
    # print(json.dumps(json_str, indent=2))
    for i in formatted:
        strvalues = f'{strvalues}{{"num":"{i["num"]}", "name":"{i["name"]}", "visible":"{i["visible"]}", "focused":"{i["focused"]}", "urgent":"{i["urgent"]}", "output":"{i["output"]}"}},'
        # strvalues = f'{strvalues}(button :onclick "i3-msg workspace number {i["num"]}" "{i["name"]}")'
    strvalues = f"[{strvalues[:-1]}]"
    print(strvalues)
    # print(values)


def refresh_workspaces(self, workspace_event):  # self, workspace_event
    # data = workspace_event.ipc_data
    # pprint(data["change"])
    workspaces = self.get_workspaces()
    workspaces_dict = [{"num": ws.num, "name": ws.name, "visible": ws.visible,
                        "focused": ws.focused, "urgent": ws.urgent, "output": ws.output} for ws in workspaces]
    # pprint(workspaces_dict)
    print(workspaces_dict)


if __name__ == '__main__':
    i3 = Connection()
    refresh_workspaces(i3, None)
    i3.on(Event.WORKSPACE_FOCUS, refresh_workspaces)
    i3.main()
    # i3 = Connection()
    # refresh_workspaces(self, None)
    # i3.main()
