#!/dev/null
# dumbfetch.sh
# dumfech
local boxcolor="[0;38;5;$((RANDOM % 255))m"
local cachefile="$XDG_RUNTIME_DIR/dumfech-$XDG_SESSION_ID.cache"
[[ ! -f $cachefile ]] && (
        #echo "Saving to cache" >&2
        #df -h -l -t btrfs -t xfs -t ext4 -t exfat --output=pcent | uniq | xargs | sed 's/Use%[[:space:]]*//'
        echo ${(f)${(u)$(df -h -l -t btrfs -t xfs -t ext4 -t exfat --output=pcent)#Use%}}
        # nvidia-settings -v | grep -oP 'version\s\K[^\s]+'
        if [[ -r /sys/module/nvidia/version ]]; then
            cat /sys/module/nvidia/version
        else
            echo 'none'
        fi
        #echo "${$(uname -r)%%-*}"
        uname -r | grep -o '^[^-]*-[^-\.]*'
    ) >"$cachefile"

# ik I'm cheating here a bit with a cachefile, but idk, it's a performance thing
local -a cached=("${(f)$(<$cachefile)}")

# this is less computationally expensive and more cross-platform than running procps uptime
local -a uptime
local -i upt="${$(</proc/uptime)%%.*}"
local -i hrs=$((upt / 3600))
local -i mins=$(((upt % 3600) / 60))
if ((hrs)); then
    uptime+=("${hrs} hr")
    ((hrs > 1)) && uptime+=(s)
    uptime+=(', ')
fi
uptime+=("${mins} min")
((mins > 1)) && uptime+=(s)

# "${${${${$(uptime -p)}#up }//hour/hr}//minute/min}"
local -a props=(
    "${SHLVL:-999}"
    "${(j..)uptime}"
    "${TERM:-Undefined}"
    "${cached[1]}"
    "${cached[2]}"
    "${cached[3]}"
)

# run figlet -- "$USER"

local -i len=${${(On)${(N)${props}%%*}}[1]}
local lenstr="${boxcolor}╭────────────────┬─────────────${$(printf "%${len}s\n" '')// /─}╮[0m"

echo "$lenstr"
printf "${boxcolor}│[0;92m%s${boxcolor}│[0;%s   [1m%-${len}s ${boxcolor}│[0m\n" \
    '        _ _     ' '94m  SHLVL ' "${props[1]}" \
    ' __   _| | | __ ' '95m 󰅐 Uptime' "${props[2]}" \
    ' \ \ / / | |/ / ' '96m  Term  ' "${props[3]}" \
    '  \ V /| |   <  ' '93m 󰋊 Disk  ' "${props[4]}" \
    '   \_/ |_|_|\_\ ' '92m 󰾲 Nvidia' "${props[5]}" \
    '                ' '91m  Kernel' "${props[6]}"
echo "${${${lenstr/╭/╰}/┬/┴}/╮/╯}"

command -v fortune lolcat &>/dev/null && fortune -a -s | lolcat

local lsdiff_path="$XDG_CONFIG_HOME/shell/rustcfg/lsdiff-rs"
local lsdiff_bin="$lsdiff_path/target/release/${lsdiff_path##*/}"
if [[ ! -x $lsdiff_bin ]] && [[ -d "$lsdiff_path" ]] && [[ -x =cargo ]] &>/dev/null; then
    local oldpwd="$PWD"
    cd "$lsdiff_path" || return
    cargo build --release
    cd "$oldpwd" || return
fi
$lsdiff_bin
return 0
