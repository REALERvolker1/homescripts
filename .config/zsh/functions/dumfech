local cachefile="$XDG_RUNTIME_DIR/dumfech.cache"
if [[ ${1:-} == '--update' || ! -f $cachefile ]]; then
    local nvidia
    if command -v 'rpm' &>/dev/null; then
        nvidia="$(rpm -q xorg-x11-drv-nvidia | cut -d '-' -f 5)"
    elif command -v 'pacman' &>/dev/null; then
        nvidia="$(pacman -Q nvidia-dkms 2>/dev/null | grep -oP '^.* \K[^-]*')"
    elif command -v 'apt' &>/dev/null; then
        nvidia="$(apt list 2>/dev/null | grep -m 1 nvidia-driver | cut -d ' ' -f 2)"
    else
        nvidia="Unsupported Distribution!"
    fi
    #     local disk="${${$(\df -h -l -t btrfs -t xfs -t ext4 --output=pcent | grep -v '^[A-Za-z]' | uniq | tr -s '[:blank:]')/ /}/
    # /}"
    local disk="$(\df -h -l -t btrfs -t xfs -t ext4 --output=pcent | uniq | sed -Ez 's/^Use%\n |\n| +$//g;s/ +/ /g')" # | grep -v '^[A-Za-z]'
    local kern="$(uname -r | grep -o '^[^-]*')"
    echo "Updating dumfech cache"
    printf '%s\n' "$disk" "$nvidia" "$kern" >"$cachefile" || return 1
fi
local cachestuff="$(cat "$cachefile")"
local box_color="[38;5;$((RANDOM % 255))m"
# local -A prop=(
#     ['[94m  SHLVL ']="${SHLVL:-999}"
#     ['[95m 󰅐 Uptime']="$(uptime -p | sed 's/^up // ; s/hour/hr/g ; s/minute/min/g')"
#     ['[96m  Term  ']="${TERM:-Undefined}"
#     ['[93m 󰋊 Disk  ']="${cachestuff%%
# *}"
#     []
# )
local -a props=()

# printf '%s => %s\n' "${(@kv)prop}"
# local -a prop=(
# local box_color="[38;5;$((RANDOM % 255))m"
# local tab=$'\t'
# local -a prop=(
#     "${SHLVL:-999}"
#     "$(uptime -p | sed 's/^up // ; s/hour/hr/g ; s/minute/min/g')"
#     "${TERM:-Undefined}"
#     "${$(/bin/df -h -l -t btrfs -t xfs -t ext4 --output=pcent | grep -v '^[A-Za-z]' | uniq)/ /}"
#     "$(
#         if command -v 'rpm' &>/dev/null; then
#             rpm -q xorg-x11-drv-nvidia | cut -d '-' -f 5
#         elif command -v 'pacman' &>/dev/null; then
#             pacman -Q nvidia-dkms 2>/dev/null | grep -oP '^.* \K[^-]*'
#         elif command -v 'apt' &>/dev/null; then
#             apt list 2>/dev/null | grep -m 1 nvidia-driver | cut -d ' ' -f 2
#         else
#             echo 'unsupported distro'
#         fi
#     )"
#     "$(uname -r | grep -o '^[^-]*-[^.]*')"
# )

# local -i len="$(print -l $prop | wc -L)"

# local length_string="${box_color}╭────────────────┬─────────────${$(printf "%-${len}s\n" '')// /─}╮[0m"

# echo "$length_string"
# printf "${box_color}│[0m[92m%s${box_color}│[0m%s   [1m%-${len}s [0m${box_color}│[0m\n" \
#     '        _ _     ' '[94m  SHLVL ' "${prop[1]}" \
#     ' __   _| | | __ ' '[95m 󰅐 Uptime' "${prop[2]}" \
#     ' \ \ / / | |/ / ' '[96m  Term  ' "${prop[3]}" \
#     '  \ V /| |   <  ' '[93m 󰋊 Disk  ' "${prop[4]}" \
#     '   \_/ |_|_|\_\ ' "[92m 󰾲 Nvidia" "${prop[5]}" \
#     '                ' '[91m  Kernel' "${prop[6]}"

# echo "${${${length_string/╭/╰}/┬/┴}/╮/╯}"
