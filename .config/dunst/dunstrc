[global]
monitor = 0
# mouse || keyboard || none
follow = none

width = (250, 350)
height = 300
#height = (10, 300)

origin = top-right
offset = 10x50
scale = 1

notification_limit = 8

min_icon_size = 32
max_icon_size = 48

progress_bar = true
progress_bar_height = 12
progress_bar_frame_width = 1

progress_bar_corner_radius = 4

progress_bar_min_width = 150
progress_bar_max_width = 300

indicate_hidden = yes

transparency = 20

separator_height = 2
gap_size = 6
separator_color = frame

padding = 8
horizontal_padding = 8
text_icon_padding = 8

corner_radius = 8
frame_width = 1

sort = yes

# Don't remove messages, if the user is idle (no mouse or keyboard input)
#idle_threshold = 120
show_age_threshold = 30

font = sans 11

line_height = 0
markup = full

#   %a: appname, %s: summary, %b: body, %i: iconname (including its path), %I: iconname (without its path), %p: progress value([ 0%] to [100%]), %n: progress value(1 to 100), %%: literal %
format = "<i>%a</i> %p\n<b>%s</b>\n%b"
# I override this for notify-send

alignment = right
vertical_alignment = center

icon_position = left

ellipsize = middle

ignore_newline = no

stack_duplicates = true
hide_duplicate_count = false
show_indicators = yes

enable_recursive_icon_lookup = true
icon_theme = "Newaita-reborn-deep-purple-dark, Adwaita, hicolor"
# Paths to default icons
icon_path = /usr/share/icons/Adwaita/16x16/status/:/usr/share/icons/Adwaita/16x16/devices/:/usr/share/icons/Adwaita/16x16/legacy/

sticky_history = yes
history_length = 20


dmenu = rofi -dmenu
browser = /usr/bin/xdg-open
always_run_script = true

title = Dunst
class = Dunst

ignore_dbusclose = false
force_xwayland = false

# Defines list of actions for each mouse event
# Possible values are:
# * none: Don't do anything.
# * do_action: Invoke the action determined by the action_name rule. If there is no
#  such action, open the context menu.
# * open_url: If the notification has exactly one url, open it. If there are multiple
# ones, open the context menu.
# * close_current: Close current notification.
# * close_all: Close all notifications.
# * context: Open context menu for the notification.
# * context_all: Open context menu for all notifications.
# These values can be strung together for each mouse event, and
# will be executed in sequence.
mouse_left_click = close_current
mouse_middle_click = context
mouse_right_click = do_action, close_current

frame_color = "#61afef"

[urgency_low]
background = "#3e445190"
foreground = "#AAAAAA"
timeout = 5
default_icon = emblem-information

[urgency_normal]
background = "#282c3490"
foreground = "#ffffff"
timeout = 5
#default_icon = emblem-information

[urgency_critical]
background = "#900000C0"
foreground = "#ffffff"
frame_color = "#ef596f"
timeout = 0
#default_icon = /path/to/icon

[experimental]
per_monitor_dpi = false

# Every section that isn't one of the above is interpreted as a rules to
# override settings for certain messages.
#
# Messages can be matched by
#appname (discouraged, see desktop_entry)
#body
#category
#desktop_entry
#icon
#match_transient
#msg_urgency
#stack_tag
#summary
#
# and you can override the
#background
#foreground
#format
#frame_color
#fullscreen
#new_icon
#set_stack_tag
#set_transient
#set_category
#timeout
#urgency
#icon_position
#skip_display
#history_ignore
#action_name
#word_wrap
#ellipsize
#alignment
#hide_text
#
# Shell-like globbing will get expanded.
#
# Instead of the appname filter, it's recommended to use the desktop_entry filter.
# GLib based applications export their desktop-entry name. In comparison to the appname,
# the desktop-entry won't get localized.
#
# SCRIPTING
# You can specify a script that gets run when the rule matches by
# setting the "script" option.
# The script will be called as follows:
#   script appname summary body icon urgency
# where urgency can be "LOW", "NORMAL" or "CRITICAL".
#
# NOTE: It might be helpful to run dunst -print in a terminal in order
# to find fitting options for rules.

#script = "dunst-history.sh"

# Disable the transient hint so that idle_threshold cannot be bypassed from the
# client
#[transient_disable]
#match_transient = yes
#set_transient = no
#
# Make the handling of transient notifications more strict by making them not
# be placed in history.
#[transient_history_ignore]
#match_transient = yes
#history_ignore = yes

# fullscreen values
# show: show the notifications, regardless if there is a fullscreen window opened
# delay: displays the new notification, if there is no fullscreen window active
#If the notification is already drawn, it won't get undrawn.
# pushback: same as delay, but when switching into fullscreen, the notification will get
#   withdrawn from screen again and will get delayed like a new notification
#[fullscreen_delay_everything]
#fullscreen = delay
#[fullscreen_show_critical]
#msg_urgency = critical
#fullscreen = show

[brightness-watcher]
appname = "vlk-brightness-audio-watcher"
format = "%s"
icon_position = off
alignment = center

[notify-send]
appname = "notify-send"
format = "<b>%s</b>\n%b%p"

#[espeak]
#summary = "*"
#script = dunst_espeak.sh

#[script-test]
#summary = "*script*"
#script = dunst_test.sh

#[ignore]
## This notification will not be displayed
#summary = "foobar"
#skip_display = true

#[history-ignore]
## This notification will not be saved in history
#summary = "foobar"
#history_ignore = yes

#[skip-display]
## This notification will not be displayed, but will be included in the history
#summary = "foobar"
#skip_display = yes

#[signed_on]
#appname = Pidgin
#summary = "*signed on*"
#urgency = low
#
#[signed_off]
#appname = Pidgin
#summary = *signed off*
#urgency = low
#
#[says]
#appname = Pidgin
#summary = *says*
#urgency = critical
#
#[twitter]
#appname = Pidgin
#summary = *twitter.com*
#urgency = normal
#
#[stack-volumes]
#appname = "some_volume_notifiers"
#set_stack_tag = "volume"
#
# vim: ft=cfg
