#!/usr/bin/bash
# a startx implementation, by vlk
# intended to be interchangeable with Fedora's startx
# shellcheck disable=SC1091 disable=SC1090

debug_mode=''
my_tty="$(tty)"
if [ "$TERM" != 'linux' ] && [ -z "${debug_mode:-}" ]; then
    case "${my_tty:-}" in
    '/dev/tty'*)
        true
        ;;
    *)
        echo "Invalid tty '$(tty)', running in debug mode" >&2
        debug_mode=1
        ;;
    esac
fi
[ -f "$HOME/.profile" ] && . "$HOME/.profile"

declare -a server_args client_args

if [ -f "${XSERVERRC:-$HOME/.xserverrc}" ]; then
    xserver_bin="${XSERVERRC:-$HOME/.xserverrc}"
else
    xserver_bin=/usr/bin/Xorg
fi
if command -v "${1%% *}" &>/dev/null || [ -x "${1%% *}" ]; then
    for i in $1; do
        client_args+=("$i")
    done
else
    for i in "$XINITRC" \
        "${XDG_CONFIG_HOME:-$HOME/.config}/X11/xinitrc" \
        "$HOME/.xinitrc"; do
        [ ! -x "$i" ] && continue
        client_args+=("$i")
    done
fi
# printf '%s\n' "${client_args[@]}"

# determine unused display
for ((i = 0; i < 9999; i++)); do
    [ -e "/tmp/.X${i}-lock" ] ||
        [ -S "/tmp/.X11-unix/X${i}" ] ||
        grep -q "/tmp/.X11-unix/X${i}" /proc/net/unix ||
        break
done
display=":${i}"

# determine paths to stuff
xsessionfolder="${XDG_RUNTIME_DIR:-/tmp}/xorg-$display"
export XAUTHORITY="$xsessionfolder/Xauthority"
export ERRFILE="$xsessionfolder/xsession-errors"

# Fedora specific mod to make X run as non root
export XORG_RUN_AS_USER_OK=1
export XDG_SESSION_TYPE=x11
declare -a xauth_args xinit_args

xauth_args+=(
    "add"
    "$display"
    'MIT-MAGIC-COOKIE-1'
    "$(mcookie)"
)

server_args+=(
    "$xserver_bin"
    "$display"
    "vt${my_tty##*[!0-9]}"
    "-keeptty"
    "-noreset"
    "-auth"
    "$XAUTHORITY"
)

# xinit_args+=(
#     "$xclient_bin" # client, clientargs, --, server, display, serverargs
#     "--"
#     "$xserver_bin"
#     "$display"
#     "vt${my_tty##*[!0-9]}"
#     "-keeptty"
#     "-noreset"
#     "-auth"
#     "$XAUTHORITY"
# )

_cleanup() {
    if [ "$server" ] && kill -0 "$server" 2>/dev/null; then
        kill "$server"
        wait "$server"
        xorg=$?
    fi
    if ! stty "$original_stty"; then
        stty sane
    fi
    xauth remove "$display"
    rm -r "$xsessionfolder"
    deallocvt
    echo -e "\nCleaned up X server\n" >&2
}

echo xauth "${xauth_args[@]}"
echo "${server_args[@]}"
# echo xinit "${xinit_args[@]}"
[ -n "${debug_mode:-}" ] && exit 0

mkdir "$xsessionfolder"
touch -- "$XAUTHORITY"
touch -- "$ERRFILE"
original_stty="$(stty --save)"
xauth "${xauth_args[@]}"

trap '_cleanup; exit "${xorg:-0}"' EXIT
for signal in HUP INT QUIT TERM; do
    trap "_cleanup; trap - $signal EXIT; kill -s $signal $$" "$signal"
done
trap 'DISPLAY=$display "${client_args[@]}" & wait "$!"' USR1

(trap '' USR1 && exec "${server_args[@]}") &
server=$!
echo "started X server on display $display"
wait "$server"
# trap '_cleanup' HUP INT QUIT ILL TRAP BUS TERM
# xinit "${xinit_args[@]}" >"$ERRFILE"
# retval=$?
# _cleanup
# exit "$retval"
