# shellcheck shell=dash
# shellcheck disable=2155,2153
# vim:foldmethod=marker:ft=sh

unset MAILCHECK

__vlkenv_venv=
if [ -n "${CONDA_PREFIX:-}" ]; then
    __vlkenv_venv="$CONDA_PREFIX"
    conda deactivate
    echo "\$CONDA_PREFIX '$__vlkenv_venv' deactivated"
fi
if [ -n "${VIRTUAL_ENV:-}" ]; then
    __vlkenv_venv="$VIRTUAL_ENV"
    deactivate
    echo "\$VIRTUAL_ENV '$__vlkenv_venv' deactivated"
fi
unset __vlkenv_venv

export CURRENT_HOSTNAME="JOE" # The hostname of my main pc

# [ -z "${CURRENT_DISTRO:-}" ] && export CURRENT_DISTRO="$(grep -oP '^NAME="\K[^ ]*' /etc/os-release)"

# export HOME="${HOME:=/home/$(whoami)}"
# export HOSTNAME="${HOSTNAME:-$(hostname)}"
# export TTY="${TTY:-$(tty)}"
# export XDG_CONFIG_HOME="$HOME/.config"
# export XDG_DATA_HOME="$HOME/.local/share"
# export XDG_CACHE_HOME="$HOME/.cache"
# export XDG_STATE_HOME="$HOME/.local/state"
# export $(grep -Ev '^[[:space:]]*(#.*|)$' "$XDG_CONFIG_HOME/user-dirs.dirs")

export XDG_CONFIG_HOME="$HOME/.config" XDG_DATA_HOME="$HOME/.local/share" XDG_CACHE_HOME="$HOME/.cache" XDG_STATE_HOME="$HOME/.local/state"

if [ "${EDITOR:-}" != 'nvim' ]; then
    unset EDITOR
    if command -v nvim >/dev/null; then
        export EDITOR="nvim"
        export MANPAGER='nvim +Man\!'
    else
        for i in nvim vim hx micro vi nano; do
            command -v "$i" >/dev/null && export EDITOR="$i" && break
        done
    fi
fi

[ -n "${EDITOR:-}" ] && export VISUAL="$EDITOR"
export PAGER='less' TERMINAL='vlk-sensible-terminal 1' BROWSER='vlk-sensible-browser 1'

# custom LS commands for vlkrc
export LA_COMMAND='\ls --color=auto --group-directories-first -A'
if command -v lsd >/dev/null; then
    export LS_COMMAND='lsd' LL_COMMAND='lsd -l'
else
    export LS_COMMAND="$LA_COMMAND" LL_COMMAND="$LA_COMMAND -l"
fi

# export QT_QPA_PLATFORMTHEME='qt5ct'
# export QT_STYLE_OVERRIDE='kvantum'
# export QT_QPA_PLATFORM_PLUGIN_PATH="$XDG_CONFIG_HOME"

# export MOZ_ENABLE_WAYLAND=1
# export UWUFETCH_CACHE_ENABLED=true
# export GTK_USE_PORTAL=1

case "${LS_COLORS:-}" in
*':*rc='*) : ;;
*)
    echo start colors >~/.colorsrc
    if [ -f "$XDG_CONFIG_HOME/dir_colors" ]; then
        eval "$(dircolors --sh "$XDG_CONFIG_HOME/dir_colors" || echo 'echo error loading dircolors')"
        export USER_LS_COLORS="$LS_COLORS"
    fi
    ;;
esac
DIRECTORY_COLOR="${LS_COLORS##*:di=}"
export DIRECTORY_COLOR="${DIRECTORY_COLOR%%:*}"

export HISTFILE="$XDG_RUNTIME_DIR/shellhist"
export LESSHISTFILE='/dev/null'

export GPG_TTY="${TTY:=$(tty)}"

[ -z "${GNOME_KEYRING_CONTROL:-}" ] && export GNOME_KEYRING_CONTROL="${GNOME_KEYRING_CONTROL:-$XDG_RUNTIME_DIR/keyring}"
[ -z "${SSH_AUTH_SOCK:-}" ] && export SSH_AUTH_SOCK="${SSH_AUTH_SOCK:-$XDG_RUNTIME_DIR/keyring/ssh}"

if [ -S "$XDG_RUNTIME_DIR/.ydotool_socket" ]; then
    export YDOTOOL_SOCKET="$XDG_RUNTIME_DIR/.ydotool_socket"
elif [ -S /tmp/.ydotool_socket ]; then
    export YDOTOOL_SOCKET='/tmp/.ydotool_socket'
fi

__vlkenv_pathmunge_bin="$XDG_CONFIG_HOME/shell/rustcfg/pathmunge/target/release/pathmunge"

if [ ! -x "$__vlkenv_pathmunge_bin" ]; then
    # __pathmunge() {
    #     for i in "$@"; do
    #         PATHMUNGE_PATH="$i:$PATHMUNGE_PATH"
    #     done
    #     echo "$PATHMUNGE_PATH"
    # }

    __pathmunge() {
        oldifs="$IFS"
        tmppth=
        IFS="
"
        for i in "$@" $(IFS=':' printf '%s\n' $PATHMUNGE_PATH); do
            case ":${PATHMUNGE_PATH:-}:" in
            *":${i}:"*) continue ;;
            *) [ -d "$i" ] && tmppth="$i:$tmppth" ;;
            esac
        done
        IFS="$oldifs"
        echo "${tmppth}:${PATHMUNGE_PATH}" | sed -E 's/:+/:/g ; s/^:|:$//g'
    }
    __vlkenv_pathmunge_bin='__pathmunge'
fi

export XDG_DATA_DIRS="$(
    PATHMUNGE_PATH="$XDG_DATA_DIRS" $__vlkenv_pathmunge_bin \
        "$XDG_DATA_HOME" \
        "$XDG_DATA_HOME/flatpak/exports/share" \
        '/var/lib/flatpak/exports/share' \
        '/usr/local/share' \
        '/usr/share'
)"
# export TERMINFO_DIRS="$(
#     PATHMUNGE_PATH="$TERMINFO_DIRS" $__vlkenv_pathmunge_bin $(echo "$XDG_DATA_DIRS:" | sed 's/:/\/terminfo /g')
# )"

export PATH="$(
    PATHMUNGE_PATH="$PATH" $__vlkenv_pathmunge_bin \
        "$HOME/bin" \
        "$HOME/.local/bin" \
        "${CARGO_HOME:-CARGO_HOME}/bin" \
        "${GOPATH:-GOPATH}/bin" \
        "${BUN_INSTALL:-BUN_INSTALL}/bin" \
        "${PNPM_HOME:-PNPM_HOME}" \
        "${PYTHONUSERBASE:-PYTHONUSERBASE}/bin" \
        '/var/lib/flatpak/exports/bin' \
        '/usr/local/bin'
)"
[ "${__vlkenv_pathmunge_bin:-}" = '__pathmunge' ] && unset -f __pathmunge
unset oldifs tmppth i ICON_TYPE __vlkenv_pathmunge_bin

if [ -n "${VTE_VERSION:-}" ]; then
    export ICON_TYPE='dashline'
else
    case "$TERM" in
    *kitty* | *alacritty*)
        export ICON_TYPE='dashline'
        ;;
    *)
        export ICON_TYPE='fallback'
        ;;
    esac
fi
export ICON_TYPE
